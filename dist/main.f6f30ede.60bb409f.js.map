{"version":3,"sources":["undyne.js","node_modules/prismjs/prism.js","node_modules/prismjs/components.js","node_modules/prismjs/dependencies.js","node_modules/prismjs/components/index.js","main.js","../../../../opt/local/lib/node_modules/parcel/src/builtins/hmr-runtime.js"],"names":["Undyne","canvas","ctx","getContext","content","scrollLeft","scrollTop","caretX","caretY","blinkIn","makeInput","installEventHandlers","retina","render","caretInterval","setInterval","caret","fontSize","lineSpacing","lineHeight","fontFamily","charWidth","getCharWidth","rows","getRows","columns","getColumns","foreground","input","document","createElement","setAttribute","style","transform","value","body","append","scrollingElement","focus","preventScroll","widthAttr","getAttribute","heightAttr","width","Number","slice","height","scale","Math","ceil","addEventListener","event","onKeyDown","onMouseDown","onMouseUp","onMouseMove","ev","onTouchStart","onTouchEnd","onTouchMove","onWheel","onDblClick","deltaY","scrollY","getLines","length","toString","preventDefault","isDown","leftPad","getLeftPad","touch","touches","rect","getBoundingClientRect","downPos","x","clientX","left","y","clientY","top","scrollTouch","changedTouches","upPos","click","select","scrollX","pos","lines","rowAtY","floor","colAtX","lineAtY","firstWordStart","search","firstWhiteAfterX","firstWordEnd","selection","startX","endX","startY","endY","clear","deltaCols","newScroll","maxScroll","min","deltaX","nullifySelection","offsetX","offsetY","moveCaret","upDownSelection","max","endLength","startLength","lineCount","keyCode","setTimeout","insertAtCaret","key","caretToEnd","shiftKey","caretToHome","startsWith","direction","replace","toLowerCase","ctrlKey","metaKey","copy","paste","delete","includes","text","getSelection","navigator","clipboard","writeText","readText","then","splice","join","firstLine","lastLine","rest","str","hasSelection","pre","curr","post","right","lastOfPre","pop","caretMax","dx","dy","caretAtEnd","scrollToCaret","deltaRows","save","fillStyle","fillRect","i","restore","drawSelectBackground","lineNumbers","Array","fill","map","n","lineNumberMaxWidth","tokenLinesToDraw","tokenize","line","removed","token","shift","unshift","forEach","index","lineNumber","formattedLineNumber","repeat","font","fillText","color","split","caretVisible","beginPath","strokeStyle","moveTo","lineTo","stroke","div","innerText","display","appendChild","window","getComputedStyle","remove","module","exports","PrismUndyne","colorMap","tokens","flattenTokens","prism","languages","javascript","isArray","flat","type","el","classList","add","push","endsWith","getElementById","clientWidth","editor","OVERLAY_ID","OldModule","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","JSON","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","stackTrace","innerHTML","getParents","modules","parents","k","d","dep","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"main.f6f30ede.60bb409f.js","sourceRoot":"..","sourcesContent":["class Undyne {\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext(\"2d\");\n    this.content = \"\";\n    this.scrollLeft = 0;\n    this.scrollTop = 0;\n    this.caretX = 0;\n    this.caretY = 0;\n    this.blinkIn = true;\n    this.makeInput();\n    this.installEventHandlers();\n    this.retina();\n    this.render();\n    this.caretInterval = setInterval(() => this.caret(), 500);\n    this.fontSize = 16;\n    this.lineSpacing = 2;\n    this.lineHeight = this.fontSize + this.lineSpacing;\n    this.fontFamily = \"monospace\";\n    this.charWidth = this.getCharWidth();\n    this.rows = this.getRows();\n    this.columns = this.getColumns();\n    this.foreground = \"#f8f8f2\";\n  }\n  makeInput() {\n    this.input = document.createElement(\"input\");\n    this.input.setAttribute(\"type\", \"text\");\n    this.input.style.transform = \"translateX(-99999px) translateY(-99999px)\";\n    this.input.value = \"X\";\n    document.body.append(this.input);\n  }\n  focus() {\n    const { scrollTop, scrollLeft } = document.scrollingElement;\n    this.input.focus({ preventScroll: true });\n    document.scrollingElement.scrollTop = scrollTop;\n    document.scrollingElement.scrollLeft = scrollLeft;\n  }\n  retina() {\n    const widthAttr = this.canvas.getAttribute(\"width\");\n    const heightAttr = this.canvas.getAttribute(\"height\");\n    const width = Number(widthAttr.slice(0, -2));\n    const height = Number(heightAttr.slice(0, -2));\n    this.canvas.setAttribute(\"width\", `${width * 2}px`);\n    this.canvas.setAttribute(\"height\", `${height * 2}px`);\n    this.canvas.style.width = widthAttr;\n    this.canvas.style.height = heightAttr;\n    this.ctx.scale(0.5, 0.5);\n  }\n  getColumns() {\n    return Math.ceil(this.canvas.width / 2 / this.charWidth);\n  }\n  getRows() {\n    return Math.ceil(this.canvas.height / 2 / this.lineHeight);\n  }\n  installEventHandlers() {\n    this.canvas.setAttribute(\"tabindex\", \"0\");\n    this.focus();\n    this.input.addEventListener(\"keydown\", event => this.onKeyDown(event));\n    this.canvas.addEventListener(\"mousedown\", event => this.onMouseDown(event));\n    this.canvas.addEventListener(\"mouseup\", event => this.onMouseUp(event));\n    this.canvas.addEventListener(\"mousemove\", event => this.onMouseMove(event));\n    this.canvas.addEventListener(\"touchstart\", ev => this.onTouchStart(ev));\n    this.canvas.addEventListener(\"touchend\", event => this.onTouchEnd(event));\n    this.canvas.addEventListener(\"touchmove\", event => this.onTouchMove(event));\n    this.canvas.addEventListener(\"wheel\", event => this.onWheel(event));\n    this.canvas.addEventListener(\"dblclick\", event => this.onDblClick(event));\n  }\n  onWheel(event) {\n    const { deltaY } = event;\n    this.scrollY(deltaY);\n  }\n  getLeftPad() {\n    return this.getLines().length.toString().length + 3;\n  }\n  onTouchStart(event) {\n    event.preventDefault();\n    this.focus();\n    this.isDown = true;\n    const leftPad = this.getLeftPad() * this.charWidth;\n    const touch = event.touches[0];\n    const rect = this.canvas.getBoundingClientRect();\n    this.downPos = {\n      x: touch.clientX - rect.left - leftPad,\n      y: touch.clientY - rect.top\n    };\n    this.scrollTouch = event.touches.length > 1;\n  }\n  onTouchEnd(event) {\n    event.preventDefault();\n    this.isDown = false;\n    const leftPad = this.getLeftPad() * this.charWidth;\n    const touch = event.changedTouches[0];\n    const rect = this.canvas.getBoundingClientRect();\n    this.upPos = {\n      x: touch.clientX - rect.left - leftPad,\n      y: touch.clientY - rect.top\n    };\n    if (!this.scrollTouch)\n      if (this.downPos.x == this.upPos.x && this.downPos.y == this.upPos.y)\n        this.click();\n      else this.select();\n  }\n  onTouchMove(event) {\n    if (!this.isDown) return;\n    const leftPad = this.getLeftPad() * this.charWidth;\n    const touch = event.touches[0];\n    const rect = this.canvas.getBoundingClientRect();\n    this.upPos = {\n      x: touch.clientX - rect.left - leftPad,\n      y: touch.clientY - rect.top\n    };\n    if (!this.scrollTouch) {\n      this.select();\n      this.click(false);\n    } else {\n      this.scrollY(this.downPos.y - this.upPos.y);\n      this.scrollX(this.downPos.x - this.upPos.x);\n    }\n  }\n  onDblClick(event) {\n    event.preventDefault();\n    const leftPad = this.getLeftPad();\n    const rect = this.canvas.getBoundingClientRect();\n    const pos = {\n      x: event.clientX - rect.left - leftPad * this.charWidth,\n      y: event.clientY - rect.top\n    };\n    const lines = this.getLines()\n      .slice(this.scrollTop)\n      .slice(0, this.rows);\n    const rowAtY = Math.floor(pos.y / this.lineHeight);\n    const colAtX = Math.floor(pos.x / this.charWidth);\n    const lineAtY = lines[rowAtY];\n    const firstWordStart = lineAtY\n      .slice(0, colAtX + 1)\n      .search(/[^\\[\\]\\(\\).\"' !@#$%^&=-]+$/);\n    const firstWhiteAfterX = lineAtY\n      .slice(colAtX)\n      .search(/[\\[\\]\\(\\).\"' !@#$%^&=-]/);\n    const firstWordEnd =\n      firstWhiteAfterX < 0 ? lineAtY.length : colAtX + firstWhiteAfterX;\n    this.selection = {\n      startX: firstWordStart,\n      endX: firstWordEnd,\n      startY: rowAtY,\n      endY: rowAtY\n    };\n    this.clear();\n    this.render();\n  }\n  scrollY(deltaY) {\n    const deltaCols = Math.floor(deltaY / this.lineHeight);\n    const newScroll = deltaCols + this.scrollTop;\n    if (newScroll < 0) return (this.scrollTop = 0);\n    const lines = this.getLines().length;\n    const maxScroll = lines - Math.min(lines, this.rows + 1);\n    if (newScroll < maxScroll) this.scrollTop = newScroll;\n    else this.scrollTop = maxScroll;\n    this.clear();\n    this.render();\n  }\n  scrollX(deltaX) {\n    const deltaCols = Math.floor(deltaX / this.charWidth);\n    const newScroll = deltaCols + this.scrollLeft;\n    if (newScroll < 0) return (this.scrollLeft = 0);\n    const maxScroll = this.getLines()[this.scrollTop].length;\n    if (newScroll < maxScroll) this.scrollLeft = newScroll;\n    else this.scrollLeft = maxScroll;\n    this.clear();\n    this.render();\n  }\n  onMouseDown(event) {\n    event.preventDefault();\n    this.focus();\n    this.isDown = true;\n    const leftPad = this.getLeftPad() * this.charWidth;\n    const rect = this.canvas.getBoundingClientRect();\n    this.downPos = {\n      x: event.clientX - rect.left - leftPad,\n      y: event.clientY - rect.top\n    };\n  }\n  onMouseUp(event) {\n    event.preventDefault();\n    this.isDown = false;\n    const leftPad = this.getLeftPad() * this.charWidth;\n    const rect = this.canvas.getBoundingClientRect();\n    this.upPos = {\n      x: event.clientX - rect.left - leftPad,\n      y: event.clientY - rect.top\n    };\n    if (this.downPos.x == this.upPos.x && this.downPos.y == this.upPos.y)\n      this.click();\n    else this.select();\n  }\n  onMouseMove(event) {\n    if (!this.isDown) return;\n    const leftPad = this.getLeftPad() * this.charWidth;\n    const rect = this.canvas.getBoundingClientRect();\n    this.upPos = {\n      x: event.clientX - rect.left - leftPad,\n      y: event.clientY - rect.top\n    };\n    this.select();\n    this.click(false);\n  }\n  click(nullifySelection = true) {\n    const { x, y } = this.upPos;\n    const offsetX = Math.floor(x / this.charWidth) + this.scrollLeft;\n    const offsetY = Math.floor(y / this.lineHeight) + this.scrollTop;\n    const deltaX = offsetX - this.caretX;\n    const deltaY = offsetY - this.caretY;\n    if (nullifySelection) this.selection = null;\n    this.moveCaret(deltaX, deltaY);\n  }\n  select() {\n    const leftPad = this.getLeftPad();\n    const selection = {\n      startX:\n        Math.floor((this.downPos.x - leftPad) / this.charWidth) +\n        this.scrollLeft,\n      startY: Math.floor(this.downPos.y / this.lineHeight) + this.scrollTop,\n      endX:\n        Math.floor((this.upPos.x - leftPad) / this.charWidth) + this.scrollLeft,\n      endY: Math.floor(this.upPos.y / this.lineHeight) + this.scrollTop\n    };\n    const { endY, startY, endX, startX } = selection;\n    this.upDownSelection = true;\n    if (endY < startY) {\n      selection.endY = startY;\n      selection.startY = endY;\n      selection.endX = startX;\n      selection.startX = endX;\n      this.upDownSelection = false;\n    }\n    const lines = this.getLines();\n    selection.endY = Math.min(selection.endY, lines.length - 1);\n    selection.startY = Math.max(\n      Math.min(selection.startY, lines.length - 1),\n      0\n    );\n    if (endY == startY && startX > endX) {\n      selection.endX = startX;\n      selection.startX = endX;\n      this.upDownSelection = false;\n    }\n    const endLength = lines[selection.endY].length;\n    const startLength = lines[selection.startY].length;\n    selection.endX = Math.max(Math.min(selection.endX, endLength), 0);\n    selection.startX = Math.max(Math.min(selection.startX, startLength), 0);\n    const lineCount = lines.length;\n    if (selection.endY < lineCount && selection.startY < lineCount)\n      this.selection = selection;\n    this.clear();\n    this.render();\n  }\n  onKeyDown(event) {\n    event.preventDefault();\n    if (event.keyCode == 229) {\n      return setTimeout(() => {\n        const value = this.input.value.slice(1);\n        this.input.value = \"X\";\n        this.insertAtCaret(value);\n      }, 0);\n    }\n    const { key } = event;\n    const ignoreList = [\"Shift\", \"Control\", \"Alt\", \"Meta\"];\n    if (key == \"End\") this.caretToEnd(event.shiftKey);\n    else if (key == \"Home\") this.caretToHome(event.shiftKey);\n    else if (key.startsWith(\"Arrow\")) {\n      const direction = key.replace(/^Arrow/, \"\").toLowerCase();\n      if (direction == \"left\") this.moveCaret(-1, 0, event.shiftKey);\n      else if (direction == \"right\") this.moveCaret(1, 0, event.shiftKey);\n      else if (direction == \"down\") this.moveCaret(0, 1, event.shiftKey);\n      else if (direction == \"up\") this.moveCaret(0, -1, event.shiftKey);\n    } else if (event.ctrlKey || event.metaKey) {\n      if (key == \"c\") {\n        this.copy();\n      } else if (key == \"v\") {\n        this.paste();\n      } else if (key == \"x\") {\n        this.copy();\n        this.delete();\n      }\n    } else if (ignoreList.includes(key)) {\n      return;\n    } else {\n      this.insertAtCaret(key);\n    }\n  }\n  copy() {\n    if (!this.selection) return;\n    const text = this.getSelection();\n    navigator.clipboard.writeText(text);\n  }\n  paste() {\n    if (this.selection) this.delete();\n    navigator.clipboard.readText().then(text => this.insertAtCaret(text));\n  }\n  delete() {\n    if (!this.selection) return;\n    const { startX, startY, endX, endY } = this.selection;\n    const lines = this.getLines();\n    if (startY == endY) {\n      lines[endY] = lines[endY].slice(0, startX) + lines[endY].slice(endX);\n    } else {\n      lines[startY] = lines[startY].slice(0, startX) + lines[endY].slice(endX);\n      lines.splice(startY + 1, endY - startY);\n    }\n    this.content = lines.join(\"\\n\");\n    this.selection = null;\n    if (!this.upDownSelection) return;\n    const deltaX = startX - endX;\n    const deltaY = startY - endY;\n    this.moveCaret(deltaX, deltaY);\n  }\n  getSelection() {\n    const { startX, startY, endX, endY } = this.selection;\n    const lines = this.getLines();\n    if (startY == endY) {\n      return lines[startY].slice(startX, endX);\n    } else {\n      const firstLine = lines[startY].slice(startX);\n      const lastLine = lines[endY].slice(0, endX);\n      const rest = lines.slice(startY + 1, endY);\n      return [firstLine, ...rest, lastLine].join(\"\\n\");\n    }\n  }\n  insertAtCaret(str) {\n    const hasSelection = !!this.selection;\n    this.delete();\n    const lines = this.getLines();\n    const pre = lines.slice(0, this.caretY);\n    const curr = lines[this.caretY];\n    const post = lines.slice(this.caretY + 1);\n    const left = curr.slice(0, this.caretX);\n    const right = curr.slice(this.caretX);\n    if (str == \"Enter\") {\n      this.content = [...pre, left, right, ...post].join(\"\\n\");\n      this.moveCaret(-this.caretX, 1);\n    } else if (str == \"Tab\") {\n      this.content = [...pre, left + \"  \" + right, ...post].join(\"\\n\");\n      this.moveCaret(2, 0);\n    } else if (str == \"Backspace\") {\n      if (hasSelection) return;\n      if (!left.length) {\n        const lastOfPre = pre.pop() || \"\";\n        this.content = [...pre, lastOfPre + right, ...post].join(\"\\n\");\n        this.moveCaret(lastOfPre.length - this.caretX, -1);\n      } else {\n        this.content = [...pre, left.slice(0, -1) + right, ...post].join(\"\\n\");\n        this.moveCaret(-1, 0);\n      }\n    } else {\n      this.content = [...pre, left + str + right, ...post].join(\"\\n\");\n      this.moveCaret(str.length, 0);\n    }\n    this.clear();\n    this.render();\n  }\n  caretToHome(select) {\n    if (select) {\n      const startX = 0;\n      const startY = this.selection ? this.selection.startY : this.caretY;\n      const endY = this.selection ? this.selection.endY : this.caretY;\n      const endX = this.selection ? this.selection.endX : this.caretX;\n      this.selection = { startX, endX, startY, endY };\n    }\n    this.caretX = 0;\n    this.caret();\n  }\n  caretToEnd(select = false) {\n    const caretMax = this.getLines()[this.caretY].length;\n    if (select) {\n      const startX = this.selection ? this.selection.startX : this.caretX;\n      const startY = this.selection ? this.selection.startY : this.caretY;\n      const endY = this.selection ? this.selection.endY : this.caretY;\n      const endX = caretMax;\n      this.selection = { startX, endX, startY, endY };\n    }\n    this.caretX = caretMax;\n    this.caret();\n  }\n  moveCaret(dx = 0, dy = 0, select = false) {\n    if (dx + this.caretX < 0) return;\n    if (dy + this.caretY < 0) return;\n    const lines = this.getLines();\n    if (dy + this.caretY > lines.length - 1) return;\n    if (select) {\n      const selection = this.selection || {};\n      if (this.selection) {\n        const caretAtEnd = this.caretY == selection.endY;\n        if (caretAtEnd) selection.endY += dy;\n        else selection.startY += dy;\n        if (caretAtEnd) selection.endX += dx;\n        else selection.startX += dx;\n      } else {\n        selection.startY = this.caretY;\n        selection.endY = this.caretY + dy;\n        selection.startX = this.caretX;\n        selection.endX = this.caretX + dx;\n      }\n      const { endY, startY, endX, startX } = selection;\n      if (endY < startY) {\n        selection.endY = startY;\n        selection.startY = endY;\n        selection.endX = startX;\n        selection.startX = endX;\n      }\n      selection.endX = Math.min(lines[selection.endY].length, selection.endX);\n      this.selection = selection;\n    }\n    if (dy + this.caretY < lines.length) this.caretY += dy;\n    else this.caretY = lines.length;\n    if (dx + this.caretX <= lines[this.caretY].length) this.caretX += dx;\n    else this.caretX = lines[this.caretY].length;\n    this.scrollToCaret();\n    this.caret();\n  }\n  scrollToCaret() {\n    if (this.caretY >= this.scrollTop + this.rows - 1) {\n      const deltaRows = this.caretY - this.rows - this.scrollTop + 2;\n      this.scrollY(deltaRows * this.lineHeight);\n    }\n    if (this.caretY < this.scrollTop) {\n      const deltaRows = this.caretY - this.scrollTop;\n      this.scrollY(deltaRows * this.lineHeight);\n    }\n    if (this.caretX > this.scrollLeft + this.columns - 2) {\n      const deltaCols = this.caretX - this.scrollLeft - this.columns + 2;\n      this.scrollX(deltaCols * this.charWidth);\n    }\n    if (this.caretX < this.scrollLeft) {\n      const deltaCols = this.caretX - this.scrollLeft;\n      this.scrollX(deltaCols * this.charWidth);\n    }\n  }\n  drawSelectBackground() {\n    if (!this.selection) return;\n    const lines = this.getLines();\n    const leftPad = this.getLeftPad();\n    const { startX, startY, endX, endY } = this.selection;\n    const deltaX = this.scrollLeft;\n    const deltaY = this.scrollTop;\n    this.ctx.save();\n    this.ctx.fillStyle = \"rgba(68, 71, 90, 1)\";\n    if (startY == endY) {\n      this.ctx.fillRect(\n        (startX - deltaX + leftPad) * this.charWidth,\n        (startY - deltaY) * this.lineHeight + this.lineSpacing,\n        (endX - startX) * this.charWidth,\n        this.lineHeight\n      );\n    } else {\n      this.ctx.fillRect(\n        (startX - deltaX + leftPad) * this.charWidth,\n        (startY - deltaY) * this.lineHeight + this.lineSpacing,\n        (lines[startY].length - startX + leftPad) * this.charWidth,\n        this.lineHeight\n      );\n      for (let i = startY + 1; i < endY; i++)\n        this.ctx.fillRect(\n          leftPad * this.charWidth,\n          (i - deltaY) * this.lineHeight + this.lineSpacing,\n          lines[i].length * this.charWidth,\n          this.lineHeight\n        );\n      this.ctx.fillRect(\n        leftPad * this.charWidth,\n        (endY - deltaY) * this.lineHeight + this.lineSpacing,\n        endX * this.charWidth,\n        this.lineHeight\n      );\n    }\n    this.ctx.restore();\n  }\n  render() {\n    this.ctx.scale(2, 2);\n    this.drawSelectBackground();\n    const lineNumbers = Array(this.rows)\n      .fill(this.scrollTop + 1)\n      .map((n, i) => n + i);\n    const lineNumberMaxWidth = this.getLines().length.toString().length;\n    const tokens = this.tokenize();\n    const visibleTokenLines = tokens.slice(this.scrollTop).slice(0, this.rows);\n    const tokenLinesToDraw = visibleTokenLines.map(line => {\n      let removed = 0;\n      while (true) {\n        const token = line.shift();\n        if (!token) return [{ content: \"\" }];\n        if (removed + token.content.length < this.scrollLeft) {\n          removed += token.content.length;\n          continue;\n        }\n        line.unshift({\n          ...token,\n          content: token.content.slice(this.scrollLeft - removed)\n        });\n        break;\n      }\n      return line;\n    });\n    this.ctx.save();\n    tokenLinesToDraw.forEach((line, index) => {\n      const lineNumber = lineNumbers.shift();\n      const formattedLineNumber =\n        \" \".repeat(lineNumberMaxWidth - lineNumber.toString().length) +\n        lineNumber.toString() +\n        \" | \";\n      let offsetX = 0;\n      this.ctx.font = `${this.fontSize}px ${this.fontFamily}`;\n      this.ctx.fillStyle = this.foreground;\n      this.ctx.fillText(\n        formattedLineNumber,\n        offsetX * this.charWidth,\n        this.lineHeight * index + this.lineHeight\n      );\n      offsetX = offsetX + formattedLineNumber.length;\n      for (const { content, color } of line) {\n        this.ctx.font = `${this.fontSize}px ${this.fontFamily}`;\n        this.ctx.fillStyle = color || this.foreground;\n        this.ctx.fillText(\n          content,\n          offsetX * this.charWidth,\n          this.lineHeight * index + this.lineHeight\n        );\n        offsetX = offsetX + content.length;\n      }\n    });\n    this.ctx.restore();\n  }\n  tokenize() {\n    return this.getLines().map(line => {\n      return line.split(\" \").map(token => {\n        return {\n          content: token + \" \"\n        };\n      });\n    });\n  }\n  getLines() {\n    return this.content.split(\"\\n\");\n  }\n  clear() {\n    this.canvas.width = this.canvas.width;\n  }\n  caret() {\n    this.clear();\n    this.render();\n    const leftPad = this.getLines().length.toString().length + 3;\n    const caretVisible =\n      this.scrollTop <= this.caretY && this.scrollLeft <= this.caretX + leftPad;\n    if (caretVisible && this.blinkIn) {\n      const offsetY = this.caretY - this.scrollTop;\n      const offsetX = this.caretX - this.scrollLeft + leftPad;\n      this.ctx.save();\n      this.ctx.beginPath();\n      this.ctx.strokeStyle = \"#ff66aa\";\n      this.ctx.moveTo(offsetX * this.charWidth, offsetY * this.lineHeight + 2);\n      this.ctx.lineTo(\n        offsetX * this.charWidth,\n        offsetY * this.lineHeight + this.lineHeight + 2 * this.lineSpacing + 2\n      );\n      this.ctx.stroke();\n      this.ctx.restore();\n    }\n    this.blinkIn = !this.blinkIn;\n  }\n  getCharWidth() {\n    const div = document.createElement(\"div\");\n    div.innerText = \"a\";\n    div.style.fontSize = this.fontSize + \"px\";\n    div.style.fontFamily = this.fontFamily;\n    div.style.display = \"inline-block\";\n    document.body.appendChild(div);\n    const { width } = window.getComputedStyle(div);\n    div.remove();\n    return Number(width.replace(/[a-z]+/gi, \"\"));\n  }\n}\n\nmodule.exports = Undyne;\n","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t? self // if in worker\n\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n * MIT license http://www.opensource.org/licenses/mit-license.php/\n * @author Lea Verou http://lea.verou.me\n */\n\nvar Prism = (function (_self){\n\n// Private helper vars\nvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\nvar uniqueId = 0;\n\n\nvar _ = {\n\tmanual: _self.Prism && _self.Prism.manual,\n\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\tutil: {\n\t\tencode: function (tokens) {\n\t\t\tif (tokens instanceof Token) {\n\t\t\t\treturn new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\treturn tokens.map(_.util.encode);\n\t\t\t} else {\n\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t}\n\t\t},\n\n\t\ttype: function (o) {\n\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t},\n\n\t\tobjId: function (obj) {\n\t\t\tif (!obj['__id']) {\n\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t}\n\t\t\treturn obj['__id'];\n\t\t},\n\n\t\t// Deep clone a language definition (e.g. to extend it)\n\t\tclone: function deepClone(o, visited) {\n\t\t\tvar clone, id, type = _.util.type(o);\n\t\t\tvisited = visited || {};\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Object':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = {};\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn clone;\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = [];\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\to.forEach(function (v, i) {\n\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn clone;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn o;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t *\n\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t *\n\t\t * @param {Element} element\n\t\t * @returns {string}\n\t\t */\n\t\tgetLanguage: function (element) {\n\t\t\twhile (element && !lang.test(element.className)) {\n\t\t\t\telement = element.parentElement;\n\t\t\t}\n\t\t\tif (element) {\n\t\t\t\treturn (element.className.match(lang) || [, 'none'])[1].toLowerCase();\n\t\t\t}\n\t\t\treturn 'none';\n\t\t},\n\n\t\t/**\n\t\t * Returns the script element that is currently executing.\n\t\t *\n\t\t * This does __not__ work for line script element.\n\t\t *\n\t\t * @returns {HTMLScriptElement | null}\n\t\t */\n\t\tcurrentScript: function () {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif ('currentScript' in document) {\n\t\t\t\treturn document.currentScript;\n\t\t\t}\n\n\t\t\t// IE11 workaround\n\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t// this will not work for inline scripts\n\n\t\t\ttry {\n\t\t\t\tthrow new Error();\n\t\t\t} catch (err) {\n\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t// A stack will look like this:\n\t\t\t\t//\n\t\t\t\t// Error\n\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):.+:.+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\tif (src) {\n\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\n\tlanguages: {\n\t\textend: function (id, redef) {\n\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\tfor (var key in redef) {\n\t\t\t\tlang[key] = redef[key];\n\t\t\t}\n\n\t\t\treturn lang;\n\t\t},\n\n\t\t/**\n\t\t * Insert a token before another token in a language literal\n\t\t * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n\t\t * we cannot just provide an object, we need an object and a key.\n\t\t * @param inside The key (or language id) of the parent\n\t\t * @param before The key to insert before.\n\t\t * @param insert Object with the key/value pairs to insert\n\t\t * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n\t\t */\n\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\troot = root || _.languages;\n\t\t\tvar grammar = root[inside];\n\t\t\tvar ret = {};\n\n\t\t\tfor (var token in grammar) {\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar old = root[inside];\n\t\t\troot[inside] = ret;\n\n\t\t\t// Update references in other language definitions\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\n\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\tthis[key] = ret;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn ret;\n\t\t},\n\n\t\t// Traverse a language definition with Depth First Search\n\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\tvisited = visited || {};\n\n\t\t\tvar objId = _.util.objId;\n\n\t\t\tfor (var i in o) {\n\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\tvar property = o[i],\n\t\t\t\t\t    propertyType = _.util.type(property);\n\n\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t}\n\t\t\t\t\telse if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tplugins: {},\n\n\thighlightAll: function(async, callback) {\n\t\t_.highlightAllUnder(document, async, callback);\n\t},\n\n\thighlightAllUnder: function(container, async, callback) {\n\t\tvar env = {\n\t\t\tcallback: callback,\n\t\t\tcontainer: container,\n\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t};\n\n\t\t_.hooks.run('before-highlightall', env);\n\n\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\tfor (var i = 0, element; element = env.elements[i++];) {\n\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t}\n\t},\n\n\thighlightElement: function(element, async, callback) {\n\t\t// Find language\n\t\tvar language = _.util.getLanguage(element);\n\t\tvar grammar = _.languages[language];\n\n\t\t// Set language on the element, if not present\n\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n\t\t// Set language on the parent, for styling\n\t\tvar parent = element.parentNode;\n\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t}\n\n\t\tvar code = element.textContent;\n\n\t\tvar env = {\n\t\t\telement: element,\n\t\t\tlanguage: language,\n\t\t\tgrammar: grammar,\n\t\t\tcode: code\n\t\t};\n\n\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t_.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t}\n\n\t\t_.hooks.run('before-sanity-check', env);\n\n\t\tif (!env.code) {\n\t\t\t_.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t\treturn;\n\t\t}\n\n\t\t_.hooks.run('before-highlight', env);\n\n\t\tif (!env.grammar) {\n\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\treturn;\n\t\t}\n\n\t\tif (async && _self.Worker) {\n\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\tworker.onmessage = function(evt) {\n\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t};\n\n\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\tlanguage: env.language,\n\t\t\t\tcode: env.code,\n\t\t\t\timmediateClose: true\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t}\n\t},\n\n\thighlight: function (text, grammar, language) {\n\t\tvar env = {\n\t\t\tcode: text,\n\t\t\tgrammar: grammar,\n\t\t\tlanguage: language\n\t\t};\n\t\t_.hooks.run('before-tokenize', env);\n\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t_.hooks.run('after-tokenize', env);\n\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t},\n\n\tmatchGrammar: function (text, strarr, grammar, index, startPos, oneshot, target) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (target && target == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar pattern = patterns[j],\n\t\t\t\t\tinside = pattern.inside,\n\t\t\t\t\tlookbehind = !!pattern.lookbehind,\n\t\t\t\t\tgreedy = !!pattern.greedy,\n\t\t\t\t\tlookbehindLength = 0,\n\t\t\t\t\talias = pattern.alias;\n\n\t\t\t\tif (greedy && !pattern.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = pattern.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpattern.pattern = RegExp(pattern.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\tpattern = pattern.pattern || pattern;\n\n\t\t\t\t// Don’t cache length as it changes during the loop\n\t\t\t\tfor (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {\n\n\t\t\t\t\tvar str = strarr[i];\n\n\t\t\t\t\tif (strarr.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (greedy && i != strarr.length - 1) {\n\t\t\t\t\t\tpattern.lastIndex = pos;\n\t\t\t\t\t\tvar match = pattern.exec(text);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index + (lookbehind && match[1] ? match[1].length : 0),\n\t\t\t\t\t\t    to = match.index + match[0].length,\n\t\t\t\t\t\t    k = i,\n\t\t\t\t\t\t    p = pos;\n\n\t\t\t\t\t\tfor (var len = strarr.length; k < len && (p < to || (!strarr[k].type && !strarr[k - 1].greedy)); ++k) {\n\t\t\t\t\t\t\tp += strarr[k].length;\n\t\t\t\t\t\t\t// Move the index i to the element in strarr that is closest to from\n\t\t\t\t\t\t\tif (from >= p) {\n\t\t\t\t\t\t\t\t++i;\n\t\t\t\t\t\t\t\tpos = p;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (strarr[i] instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Number of tokens to delete and replace with the new match\n\t\t\t\t\t\tdelNum = k - i;\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpattern.lastIndex = 0;\n\n\t\t\t\t\t\tvar match = pattern.exec(str),\n\t\t\t\t\t\t\tdelNum = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tif (oneshot) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(lookbehind) {\n\t\t\t\t\t\tlookbehindLength = match[1] ? match[1].length : 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar from = match.index + lookbehindLength,\n\t\t\t\t\t    match = match[0].slice(lookbehindLength),\n\t\t\t\t\t    to = from + match.length,\n\t\t\t\t\t    before = str.slice(0, from),\n\t\t\t\t\t    after = str.slice(to);\n\n\t\t\t\t\tvar args = [i, delNum];\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\t++i;\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t\targs.push(before);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar wrapped = new Token(token, inside? _.tokenize(match, inside) : match, alias, match, greedy);\n\n\t\t\t\t\targs.push(wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\targs.push(after);\n\t\t\t\t\t}\n\n\t\t\t\t\tArray.prototype.splice.apply(strarr, args);\n\n\t\t\t\t\tif (delNum != 1)\n\t\t\t\t\t\t_.matchGrammar(text, strarr, grammar, i, pos, true, token + ',' + j);\n\n\t\t\t\t\tif (oneshot)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\ttokenize: function(text, grammar) {\n\t\tvar strarr = [text];\n\n\t\tvar rest = grammar.rest;\n\n\t\tif (rest) {\n\t\t\tfor (var token in rest) {\n\t\t\t\tgrammar[token] = rest[token];\n\t\t\t}\n\n\t\t\tdelete grammar.rest;\n\t\t}\n\n\t\t_.matchGrammar(text, strarr, grammar, 0, 0, false);\n\n\t\treturn strarr;\n\t},\n\n\thooks: {\n\t\tall: {},\n\n\t\tadd: function (name, callback) {\n\t\t\tvar hooks = _.hooks.all;\n\n\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\thooks[name].push(callback);\n\t\t},\n\n\t\trun: function (name, env) {\n\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\n\t\t\t\tcallback(env);\n\t\t\t}\n\t\t}\n\t},\n\n\tToken: Token\n};\n\n_self.Prism = _;\n\nfunction Token(type, content, alias, matchedStr, greedy) {\n\tthis.type = type;\n\tthis.content = content;\n\tthis.alias = alias;\n\t// Copy of the full string this token was created from\n\tthis.length = (matchedStr || '').length|0;\n\tthis.greedy = !!greedy;\n}\n\nToken.stringify = function(o, language) {\n\tif (typeof o == 'string') {\n\t\treturn o;\n\t}\n\n\tif (Array.isArray(o)) {\n\t\treturn o.map(function(element) {\n\t\t\treturn Token.stringify(element, language);\n\t\t}).join('');\n\t}\n\n\tvar env = {\n\t\ttype: o.type,\n\t\tcontent: Token.stringify(o.content, language),\n\t\ttag: 'span',\n\t\tclasses: ['token', o.type],\n\t\tattributes: {},\n\t\tlanguage: language\n\t};\n\n\tif (o.alias) {\n\t\tvar aliases = Array.isArray(o.alias) ? o.alias : [o.alias];\n\t\tArray.prototype.push.apply(env.classes, aliases);\n\t}\n\n\t_.hooks.run('wrap', env);\n\n\tvar attributes = Object.keys(env.attributes).map(function(name) {\n\t\treturn name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t}).join(' ');\n\n\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + (attributes ? ' ' + attributes : '') + '>' + env.content + '</' + env.tag + '>';\n};\n\nif (!_self.document) {\n\tif (!_self.addEventListener) {\n\t\t// in Node.js\n\t\treturn _;\n\t}\n\n\tif (!_.disableWorkerMessageHandler) {\n\t\t// In worker\n\t\t_self.addEventListener('message', function (evt) {\n\t\t\tvar message = JSON.parse(evt.data),\n\t\t\t\tlang = message.language,\n\t\t\t\tcode = message.code,\n\t\t\t\timmediateClose = message.immediateClose;\n\n\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\tif (immediateClose) {\n\t\t\t\t_self.close();\n\t\t\t}\n\t\t}, false);\n\t}\n\n\treturn _;\n}\n\n//Get current script and highlight\nvar script = _.util.currentScript();\n\nif (script) {\n\t_.filename = script.src;\n\n\tif (script.hasAttribute('data-manual')) {\n\t\t_.manual = true;\n\t}\n}\n\nif (!_.manual) {\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t// See https://github.com/PrismJS/prism/issues/2102\n\tvar readyState = document.readyState;\n\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t} else {\n\t\tif (window.requestAnimationFrame) {\n\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t}\n\t}\n}\n\nreturn _;\n\n})(_self);\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': /<!--[\\s\\S]*?-->/,\n\t'prolog': /<\\?[\\s\\S]+?\\?>/,\n\t'doctype': {\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:(?!<!--)[^\"'\\]]|\"[^\"]*\"|'[^']*'|<!--[\\s\\S]*?-->)*\\]\\s*)?>/i,\n\t\tgreedy: true\n\t},\n\t'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t/^=/,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': /&#?[\\da-z]{1,8};/i\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function(env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\s*|[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, tagName), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: /@[\\w-]+[\\s\\S]*?(?:;|(?=\\s*\\{))/,\n\t\t\tinside: {\n\t\t\t\t'rule': /@[\\w-]+/\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\tpattern: RegExp('url\\\\((?:' + string.source + '|[^\\n\\r()]*)\\\\)', 'i'),\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/\n\t\t\t}\n\t\t},\n\t\t'selector': RegExp('[^{}\\\\s](?:[^{};\"\\']|' + string.source + ')*?(?=\\\\s*\\\\{)'),\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n\t\t'important': /!important\\b/i,\n\t\t'function': /[-a-z0-9]+(?=\\()/i,\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\n\t\tPrism.languages.insertBefore('inside', 'attr-value', {\n\t\t\t'style-attr': {\n\t\t\t\tpattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'attr-name': {\n\t\t\t\t\t\tpattern: /^\\s*style/i,\n\t\t\t\t\t\tinside: markup.tag.inside\n\t\t\t\t\t},\n\t\t\t\t\t'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n\t\t\t\t\t'attr-value': {\n\t\t\t\t\t\tpattern: /.+/i,\n\t\t\t\t\t\tinside: Prism.languages.css\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\talias: 'language-css'\n\t\t\t}\n\t\t}, markup.tag);\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'function': /\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])[_$A-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\.(?:prototype|constructor))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&|\\|\\||[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?[.?]?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=(?:\\s|\\/\\*[\\s\\S]*?\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=>)/i,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*)\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\${|}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t}\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\tif (typeof self === 'undefined' || !self.Prism || !self.document || !document.querySelector) {\n\t\treturn;\n\t}\n\n\t/**\n\t * @param {Element} [container=document]\n\t */\n\tself.Prism.fileHighlight = function(container) {\n\t\tcontainer = container || document;\n\n\t\tvar Extensions = {\n\t\t\t'js': 'javascript',\n\t\t\t'py': 'python',\n\t\t\t'rb': 'ruby',\n\t\t\t'ps1': 'powershell',\n\t\t\t'psm1': 'powershell',\n\t\t\t'sh': 'bash',\n\t\t\t'bat': 'batch',\n\t\t\t'h': 'c',\n\t\t\t'tex': 'latex'\n\t\t};\n\n\t\tArray.prototype.slice.call(container.querySelectorAll('pre[data-src]')).forEach(function (pre) {\n\t\t\t// ignore if already loaded\n\t\t\tif (pre.hasAttribute('data-src-loaded')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// load current\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language, parent = pre;\n\t\t\tvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n\t\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\t\tparent = parent.parentNode;\n\t\t\t}\n\n\t\t\tif (parent) {\n\t\t\t\tlanguage = (pre.className.match(lang) || [, ''])[1];\n\t\t\t}\n\n\t\t\tif (!language) {\n\t\t\t\tvar extension = (src.match(/\\.(\\w+)$/) || [, ''])[1];\n\t\t\t\tlanguage = Extensions[extension] || extension;\n\t\t\t}\n\n\t\t\tvar code = document.createElement('code');\n\t\t\tcode.className = 'language-' + language;\n\n\t\t\tpre.textContent = '';\n\n\t\t\tcode.textContent = 'Loading…';\n\n\t\t\tpre.appendChild(code);\n\n\t\t\tvar xhr = new XMLHttpRequest();\n\n\t\t\txhr.open('GET', src, true);\n\n\t\t\txhr.onreadystatechange = function () {\n\t\t\t\tif (xhr.readyState == 4) {\n\n\t\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\t\tcode.textContent = xhr.responseText;\n\n\t\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t\t\t// mark as loaded\n\t\t\t\t\t\tpre.setAttribute('data-src-loaded', '');\n\t\t\t\t\t}\n\t\t\t\t\telse if (xhr.status >= 400) {\n\t\t\t\t\t\tcode.textContent = '✖ Error ' + xhr.status + ' while fetching file: ' + xhr.statusText;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcode.textContent = '✖ Error: File does not exist or is empty';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\txhr.send(null);\n\t\t});\n\t};\n\n\tdocument.addEventListener('DOMContentLoaded', function () {\n\t\t// execute inside handler, for dropping Event as argument\n\t\tself.Prism.fileHighlight();\n\t});\n\n})();\n","var components = {\"core\":{\"meta\":{\"path\":\"components/prism-core.js\",\"option\":\"mandatory\"},\"core\":\"Core\"},\"themes\":{\"meta\":{\"path\":\"themes/{id}.css\",\"link\":\"index.html?theme={id}\",\"exclusive\":true},\"prism\":{\"title\":\"Default\",\"option\":\"default\"},\"prism-dark\":\"Dark\",\"prism-funky\":\"Funky\",\"prism-okaidia\":{\"title\":\"Okaidia\",\"owner\":\"ocodia\"},\"prism-twilight\":{\"title\":\"Twilight\",\"owner\":\"remybach\"},\"prism-coy\":{\"title\":\"Coy\",\"owner\":\"tshedor\"},\"prism-solarizedlight\":{\"title\":\"Solarized Light\",\"owner\":\"hectormatos2011 \"},\"prism-tomorrow\":{\"title\":\"Tomorrow Night\",\"owner\":\"Rosey\"}},\"languages\":{\"meta\":{\"path\":\"components/prism-{id}\",\"noCSS\":true,\"examplesPath\":\"examples/prism-{id}\",\"addCheckAll\":true},\"markup\":{\"title\":\"Markup\",\"alias\":[\"html\",\"xml\",\"svg\",\"mathml\"],\"aliasTitles\":{\"html\":\"HTML\",\"xml\":\"XML\",\"svg\":\"SVG\",\"mathml\":\"MathML\"},\"option\":\"default\"},\"css\":{\"title\":\"CSS\",\"option\":\"default\",\"modify\":\"markup\"},\"clike\":{\"title\":\"C-like\",\"option\":\"default\",\"overrideExampleHeader\":true},\"javascript\":{\"title\":\"JavaScript\",\"require\":\"clike\",\"modify\":\"markup\",\"alias\":\"js\",\"option\":\"default\"},\"abap\":{\"title\":\"ABAP\",\"owner\":\"dellagustin\"},\"abnf\":{\"title\":\"Augmented Backus–Naur form\",\"owner\":\"RunDevelopment\"},\"actionscript\":{\"title\":\"ActionScript\",\"require\":\"javascript\",\"modify\":\"markup\",\"owner\":\"Golmote\"},\"ada\":{\"title\":\"Ada\",\"owner\":\"Lucretia\"},\"antlr4\":{\"title\":\"ANTLR4\",\"alias\":\"g4\",\"owner\":\"RunDevelopment\"},\"apacheconf\":{\"title\":\"Apache Configuration\",\"owner\":\"GuiTeK\"},\"apl\":{\"title\":\"APL\",\"owner\":\"ngn\"},\"applescript\":{\"title\":\"AppleScript\",\"owner\":\"Golmote\"},\"aql\":{\"title\":\"AQL\",\"owner\":\"RunDevelopment\"},\"arduino\":{\"title\":\"Arduino\",\"require\":\"cpp\",\"owner\":\"eisbehr-\"},\"arff\":{\"title\":\"ARFF\",\"owner\":\"Golmote\"},\"asciidoc\":{\"alias\":\"adoc\",\"title\":\"AsciiDoc\",\"owner\":\"Golmote\"},\"asm6502\":{\"title\":\"6502 Assembly\",\"owner\":\"kzurawel\"},\"aspnet\":{\"title\":\"ASP.NET (C#)\",\"require\":[\"markup\",\"csharp\"],\"owner\":\"nauzilus\"},\"autohotkey\":{\"title\":\"AutoHotkey\",\"owner\":\"aviaryan\"},\"autoit\":{\"title\":\"AutoIt\",\"owner\":\"Golmote\"},\"bash\":{\"title\":\"Bash\",\"alias\":\"shell\",\"aliasTitles\":{\"shell\":\"Shell\"},\"owner\":\"zeitgeist87\"},\"basic\":{\"title\":\"BASIC\",\"owner\":\"Golmote\"},\"batch\":{\"title\":\"Batch\",\"owner\":\"Golmote\"},\"bbcode\":{\"title\":\"BBcode\",\"owner\":\"RunDevelopment\"},\"bison\":{\"title\":\"Bison\",\"require\":\"c\",\"owner\":\"Golmote\"},\"bnf\":{\"title\":\"Backus–Naur form\",\"alias\":\"rbnf\",\"aliasTitles\":{\"rbnf\":\"Routing Backus–Naur form\"},\"owner\":\"RunDevelopment\"},\"brainfuck\":{\"title\":\"Brainfuck\",\"owner\":\"Golmote\"},\"brightscript\":{\"title\":\"BrightScript\",\"owner\":\"RunDevelopment\"},\"bro\":{\"title\":\"Bro\",\"owner\":\"wayward710\"},\"c\":{\"title\":\"C\",\"require\":\"clike\",\"owner\":\"zeitgeist87\"},\"csharp\":{\"title\":\"C#\",\"require\":\"clike\",\"alias\":[\"cs\",\"dotnet\"],\"owner\":\"mvalipour\"},\"cpp\":{\"title\":\"C++\",\"require\":\"c\",\"owner\":\"zeitgeist87\"},\"cil\":{\"title\":\"CIL\",\"owner\":\"sbrl\"},\"coffeescript\":{\"title\":\"CoffeeScript\",\"require\":\"javascript\",\"alias\":\"coffee\",\"owner\":\"R-osey\"},\"cmake\":{\"title\":\"CMake\",\"owner\":\"mjrogozinski\"},\"clojure\":{\"title\":\"Clojure\",\"owner\":\"troglotit\"},\"crystal\":{\"title\":\"Crystal\",\"require\":\"ruby\",\"owner\":\"MakeNowJust\"},\"csp\":{\"title\":\"Content-Security-Policy\",\"owner\":\"ScottHelme\"},\"css-extras\":{\"title\":\"CSS Extras\",\"require\":\"css\",\"modify\":\"css\",\"owner\":\"milesj\"},\"d\":{\"title\":\"D\",\"require\":\"clike\",\"owner\":\"Golmote\"},\"dart\":{\"title\":\"Dart\",\"require\":\"clike\",\"owner\":\"Golmote\"},\"diff\":{\"title\":\"Diff\",\"owner\":\"uranusjr\"},\"django\":{\"title\":\"Django/Jinja2\",\"require\":\"markup-templating\",\"alias\":\"jinja2\",\"owner\":\"romanvm\"},\"dns-zone-file\":{\"title\":\"DNS zone file\",\"owner\":\"RunDevelopment\",\"alias\":\"dns-zone\"},\"docker\":{\"title\":\"Docker\",\"alias\":\"dockerfile\",\"owner\":\"JustinBeckwith\"},\"ebnf\":{\"title\":\"Extended Backus–Naur form\",\"owner\":\"RunDevelopment\"},\"eiffel\":{\"title\":\"Eiffel\",\"owner\":\"Conaclos\"},\"ejs\":{\"title\":\"EJS\",\"require\":[\"javascript\",\"markup-templating\"],\"owner\":\"RunDevelopment\"},\"elixir\":{\"title\":\"Elixir\",\"owner\":\"Golmote\"},\"elm\":{\"title\":\"Elm\",\"owner\":\"zwilias\"},\"etlua\":{\"title\":\"Embedded Lua templating\",\"require\":[\"lua\",\"markup-templating\"],\"owner\":\"RunDevelopment\"},\"erb\":{\"title\":\"ERB\",\"require\":[\"ruby\",\"markup-templating\"],\"owner\":\"Golmote\"},\"erlang\":{\"title\":\"Erlang\",\"owner\":\"Golmote\"},\"fsharp\":{\"title\":\"F#\",\"require\":\"clike\",\"owner\":\"simonreynolds7\"},\"firestore-security-rules\":{\"title\":\"Firestore security rules\",\"require\":\"clike\",\"owner\":\"RunDevelopment\"},\"flow\":{\"title\":\"Flow\",\"require\":\"javascript\",\"owner\":\"Golmote\"},\"fortran\":{\"title\":\"Fortran\",\"owner\":\"Golmote\"},\"ftl\":{\"title\":\"FreeMarker Template Language\",\"require\":\"markup-templating\",\"owner\":\"RunDevelopment\"},\"gcode\":{\"title\":\"G-code\",\"owner\":\"RunDevelopment\"},\"gdscript\":{\"title\":\"GDScript\",\"owner\":\"RunDevelopment\"},\"gedcom\":{\"title\":\"GEDCOM\",\"owner\":\"Golmote\"},\"gherkin\":{\"title\":\"Gherkin\",\"owner\":\"hason\"},\"git\":{\"title\":\"Git\",\"owner\":\"lgiraudel\"},\"glsl\":{\"title\":\"GLSL\",\"require\":\"clike\",\"owner\":\"Golmote\"},\"gml\":{\"title\":\"GameMaker Language\",\"alias\":\"gamemakerlanguage\",\"require\":\"clike\",\"owner\":\"LiarOnce\"},\"go\":{\"title\":\"Go\",\"require\":\"clike\",\"owner\":\"arnehormann\"},\"graphql\":{\"title\":\"GraphQL\",\"owner\":\"Golmote\"},\"groovy\":{\"title\":\"Groovy\",\"require\":\"clike\",\"owner\":\"robfletcher\"},\"haml\":{\"title\":\"Haml\",\"require\":\"ruby\",\"optional\":[\"css\",\"css-extras\",\"coffeescript\",\"erb\",\"javascript\",\"less\",\"markdown\",\"scss\",\"textile\"],\"owner\":\"Golmote\"},\"handlebars\":{\"title\":\"Handlebars\",\"require\":\"markup-templating\",\"owner\":\"Golmote\"},\"haskell\":{\"title\":\"Haskell\",\"alias\":\"hs\",\"owner\":\"bholst\"},\"haxe\":{\"title\":\"Haxe\",\"require\":\"clike\",\"owner\":\"Golmote\"},\"hcl\":{\"title\":\"HCL\",\"owner\":\"outsideris\"},\"http\":{\"title\":\"HTTP\",\"optional\":[\"css\",\"javascript\",\"json\",\"markup\"],\"owner\":\"danielgtaylor\"},\"hpkp\":{\"title\":\"HTTP Public-Key-Pins\",\"owner\":\"ScottHelme\"},\"hsts\":{\"title\":\"HTTP Strict-Transport-Security\",\"owner\":\"ScottHelme\"},\"ichigojam\":{\"title\":\"IchigoJam\",\"owner\":\"BlueCocoa\"},\"icon\":{\"title\":\"Icon\",\"owner\":\"Golmote\"},\"inform7\":{\"title\":\"Inform 7\",\"owner\":\"Golmote\"},\"ini\":{\"title\":\"Ini\",\"owner\":\"aviaryan\"},\"io\":{\"title\":\"Io\",\"owner\":\"AlesTsurko\"},\"j\":{\"title\":\"J\",\"owner\":\"Golmote\"},\"java\":{\"title\":\"Java\",\"require\":\"clike\",\"owner\":\"sherblot\"},\"javadoc\":{\"title\":\"JavaDoc\",\"require\":[\"markup\",\"java\",\"javadoclike\"],\"modify\":[\"java\"],\"optional\":[\"scala\"],\"owner\":\"RunDevelopment\"},\"javadoclike\":{\"title\":\"JavaDoc-like\",\"modify\":[\"java\",\"javascript\",\"php\"],\"owner\":\"RunDevelopment\"},\"javastacktrace\":{\"title\":\"Java stack trace\",\"owner\":\"RunDevelopment\"},\"jolie\":{\"title\":\"Jolie\",\"require\":\"clike\",\"owner\":\"thesave\"},\"jq\":{\"title\":\"JQ\",\"owner\":\"RunDevelopment\"},\"jsdoc\":{\"title\":\"JSDoc\",\"require\":[\"javascript\",\"javadoclike\"],\"modify\":\"javascript\",\"optional\":[\"actionscript\",\"coffeescript\"],\"owner\":\"RunDevelopment\"},\"js-extras\":{\"title\":\"JS Extras\",\"require\":\"javascript\",\"modify\":\"javascript\",\"optional\":[\"actionscript\",\"coffeescript\",\"flow\",\"n4js\",\"typescript\"],\"owner\":\"RunDevelopment\"},\"js-templates\":{\"title\":\"JS Templates\",\"require\":\"javascript\",\"modify\":\"javascript\",\"optional\":[\"css\",\"css-extras\",\"graphql\",\"markdown\",\"markup\"],\"owner\":\"RunDevelopment\"},\"json\":{\"title\":\"JSON\",\"owner\":\"CupOfTea696\"},\"jsonp\":{\"title\":\"JSONP\",\"require\":\"json\",\"owner\":\"RunDevelopment\"},\"json5\":{\"title\":\"JSON5\",\"require\":\"json\",\"owner\":\"RunDevelopment\"},\"julia\":{\"title\":\"Julia\",\"owner\":\"cdagnino\"},\"keyman\":{\"title\":\"Keyman\",\"owner\":\"mcdurdin\"},\"kotlin\":{\"title\":\"Kotlin\",\"require\":\"clike\",\"owner\":\"Golmote\"},\"latex\":{\"title\":\"LaTeX\",\"alias\":[\"tex\",\"context\"],\"aliasTitles\":{\"tex\":\"TeX\",\"context\":\"ConTeXt\"},\"owner\":\"japborst\"},\"latte\":{\"title\":\"Latte\",\"require\":[\"clike\",\"markup-templating\",\"php\"],\"owner\":\"nette\"},\"less\":{\"title\":\"Less\",\"require\":\"css\",\"optional\":\"css-extras\",\"owner\":\"Golmote\"},\"lilypond\":{\"title\":\"LilyPond\",\"require\":\"scheme\",\"alias\":\"ly\",\"owner\":\"RunDevelopment\"},\"liquid\":{\"title\":\"Liquid\",\"owner\":\"cinhtau\"},\"lisp\":{\"title\":\"Lisp\",\"alias\":[\"emacs\",\"elisp\",\"emacs-lisp\"],\"owner\":\"JuanCaicedo\"},\"livescript\":{\"title\":\"LiveScript\",\"owner\":\"Golmote\"},\"lolcode\":{\"title\":\"LOLCODE\",\"owner\":\"Golmote\"},\"lua\":{\"title\":\"Lua\",\"owner\":\"Golmote\"},\"makefile\":{\"title\":\"Makefile\",\"owner\":\"Golmote\"},\"markdown\":{\"title\":\"Markdown\",\"require\":\"markup\",\"alias\":\"md\",\"owner\":\"Golmote\"},\"markup-templating\":{\"title\":\"Markup templating\",\"require\":\"markup\",\"owner\":\"Golmote\"},\"matlab\":{\"title\":\"MATLAB\",\"owner\":\"Golmote\"},\"mel\":{\"title\":\"MEL\",\"owner\":\"Golmote\"},\"mizar\":{\"title\":\"Mizar\",\"owner\":\"Golmote\"},\"monkey\":{\"title\":\"Monkey\",\"owner\":\"Golmote\"},\"moonscript\":{\"title\":\"MoonScript\",\"alias\":\"moon\",\"owner\":\"RunDevelopment\"},\"n1ql\":{\"title\":\"N1QL\",\"owner\":\"TMWilds\"},\"n4js\":{\"title\":\"N4JS\",\"require\":\"javascript\",\"optional\":[\"jsdoc\"],\"alias\":\"n4jsd\",\"owner\":\"bsmith-n4\"},\"nand2tetris-hdl\":{\"title\":\"Nand To Tetris HDL\",\"owner\":\"stephanmax\"},\"nasm\":{\"title\":\"NASM\",\"owner\":\"rbmj\"},\"neon\":{\"title\":\"NEON\",\"owner\":\"nette\"},\"nginx\":{\"title\":\"nginx\",\"owner\":\"westonganger\",\"require\":\"clike\"},\"nim\":{\"title\":\"Nim\",\"owner\":\"Golmote\"},\"nix\":{\"title\":\"Nix\",\"owner\":\"Golmote\"},\"nsis\":{\"title\":\"NSIS\",\"owner\":\"idleberg\"},\"objectivec\":{\"title\":\"Objective-C\",\"require\":\"c\",\"owner\":\"uranusjr\"},\"ocaml\":{\"title\":\"OCaml\",\"owner\":\"Golmote\"},\"opencl\":{\"title\":\"OpenCL\",\"require\":\"cpp\",\"modify\":[\"c\",\"cpp\"],\"overrideExampleHeader\":true,\"owner\":\"Milania1\"},\"oz\":{\"title\":\"Oz\",\"owner\":\"Golmote\"},\"parigp\":{\"title\":\"PARI/GP\",\"owner\":\"Golmote\"},\"parser\":{\"title\":\"Parser\",\"require\":\"markup\",\"owner\":\"Golmote\"},\"pascal\":{\"title\":\"Pascal\",\"alias\":\"objectpascal\",\"aliasTitles\":{\"objectpascal\":\"Object Pascal\"},\"owner\":\"Golmote\"},\"pascaligo\":{\"title\":\"Pascaligo\",\"owner\":\"DefinitelyNotAGoat\"},\"pcaxis\":{\"title\":\"PC-Axis\",\"alias\":\"px\",\"owner\":\"RunDevelopment\"},\"perl\":{\"title\":\"Perl\",\"owner\":\"Golmote\"},\"php\":{\"title\":\"PHP\",\"require\":[\"clike\",\"markup-templating\"],\"owner\":\"milesj\"},\"phpdoc\":{\"title\":\"PHPDoc\",\"require\":[\"php\",\"javadoclike\"],\"modify\":\"php\",\"owner\":\"RunDevelopment\"},\"php-extras\":{\"title\":\"PHP Extras\",\"require\":\"php\",\"modify\":\"php\",\"owner\":\"milesj\"},\"plsql\":{\"title\":\"PL/SQL\",\"require\":\"sql\",\"owner\":\"Golmote\"},\"powershell\":{\"title\":\"PowerShell\",\"owner\":\"nauzilus\"},\"processing\":{\"title\":\"Processing\",\"require\":\"clike\",\"owner\":\"Golmote\"},\"prolog\":{\"title\":\"Prolog\",\"owner\":\"Golmote\"},\"properties\":{\"title\":\".properties\",\"owner\":\"Golmote\"},\"protobuf\":{\"title\":\"Protocol Buffers\",\"require\":\"clike\",\"owner\":\"just-boris\"},\"pug\":{\"title\":\"Pug\",\"require\":[\"markup\",\"javascript\"],\"optional\":[\"coffeescript\",\"ejs\",\"handlebars\",\"less\",\"livescript\",\"markdown\",\"scss\",\"stylus\",\"twig\"],\"owner\":\"Golmote\"},\"puppet\":{\"title\":\"Puppet\",\"owner\":\"Golmote\"},\"pure\":{\"title\":\"Pure\",\"optional\":[\"c\",\"cpp\",\"fortran\"],\"owner\":\"Golmote\"},\"python\":{\"title\":\"Python\",\"alias\":\"py\",\"owner\":\"multipetros\"},\"q\":{\"title\":\"Q (kdb+ database)\",\"owner\":\"Golmote\"},\"qml\":{\"title\":\"QML\",\"require\":\"javascript\",\"owner\":\"RunDevelopment\"},\"qore\":{\"title\":\"Qore\",\"require\":\"clike\",\"owner\":\"temnroegg\"},\"r\":{\"title\":\"R\",\"owner\":\"Golmote\"},\"jsx\":{\"title\":\"React JSX\",\"require\":[\"markup\",\"javascript\"],\"optional\":[\"jsdoc\",\"js-extras\",\"js-templates\"],\"owner\":\"vkbansal\"},\"tsx\":{\"title\":\"React TSX\",\"require\":[\"jsx\",\"typescript\"]},\"renpy\":{\"title\":\"Ren'py\",\"owner\":\"HyuchiaDiego\"},\"reason\":{\"title\":\"Reason\",\"require\":\"clike\",\"owner\":\"Golmote\"},\"regex\":{\"title\":\"Regex\",\"modify\":[\"actionscript\",\"coffeescript\",\"flow\",\"javascript\",\"typescript\",\"vala\"],\"owner\":\"RunDevelopment\"},\"rest\":{\"title\":\"reST (reStructuredText)\",\"owner\":\"Golmote\"},\"rip\":{\"title\":\"Rip\",\"owner\":\"ravinggenius\"},\"roboconf\":{\"title\":\"Roboconf\",\"owner\":\"Golmote\"},\"robotframework\":{\"title\":\"Robot Framework\",\"alias\":\"robot\",\"owner\":\"RunDevelopment\"},\"ruby\":{\"title\":\"Ruby\",\"require\":\"clike\",\"alias\":\"rb\",\"owner\":\"samflores\"},\"rust\":{\"title\":\"Rust\",\"owner\":\"Golmote\"},\"sas\":{\"title\":\"SAS\",\"peerDependencies\":[\"groovy\",\"lua\",\"sql\"],\"owner\":\"Golmote\"},\"sass\":{\"title\":\"Sass (Sass)\",\"require\":\"css\",\"owner\":\"Golmote\"},\"scss\":{\"title\":\"Sass (Scss)\",\"require\":\"css\",\"optional\":\"css-extras\",\"owner\":\"MoOx\"},\"scala\":{\"title\":\"Scala\",\"require\":\"java\",\"owner\":\"jozic\"},\"scheme\":{\"title\":\"Scheme\",\"owner\":\"bacchus123\"},\"shell-session\":{\"title\":\"Shell session\",\"require\":\"bash\",\"owner\":\"RunDevelopment\"},\"smalltalk\":{\"title\":\"Smalltalk\",\"owner\":\"Golmote\"},\"smarty\":{\"title\":\"Smarty\",\"require\":\"markup-templating\",\"owner\":\"Golmote\"},\"solidity\":{\"title\":\"Solidity (Ethereum)\",\"require\":\"clike\",\"owner\":\"glachaud\"},\"soy\":{\"title\":\"Soy (Closure Template)\",\"require\":\"markup-templating\",\"owner\":\"Golmote\"},\"sparql\":{\"title\":\"SPARQL\",\"require\":\"turtle\",\"owner\":\"Triply-Dev\",\"alias\":\"rq\"},\"splunk-spl\":{\"title\":\"Splunk SPL\",\"owner\":\"RunDevelopment\"},\"sqf\":{\"title\":\"SQF: Status Quo Function (Arma 3)\",\"require\":\"clike\",\"owner\":\"RunDevelopment\"},\"sql\":{\"title\":\"SQL\",\"owner\":\"multipetros\"},\"stylus\":{\"title\":\"Stylus\",\"owner\":\"vkbansal\"},\"swift\":{\"title\":\"Swift\",\"require\":\"clike\",\"owner\":\"chrischares\"},\"tap\":{\"title\":\"TAP\",\"owner\":\"isaacs\",\"require\":\"yaml\"},\"tcl\":{\"title\":\"Tcl\",\"owner\":\"PeterChaplin\"},\"textile\":{\"title\":\"Textile\",\"require\":\"markup\",\"optional\":\"css\",\"owner\":\"Golmote\"},\"toml\":{\"title\":\"TOML\",\"owner\":\"RunDevelopment\"},\"tt2\":{\"title\":\"Template Toolkit 2\",\"require\":[\"clike\",\"markup-templating\"],\"owner\":\"gflohr\"},\"turtle\":{\"title\":\"Turtle\",\"alias\":[\"trig\"],\"aliasTitles\":{\"trig\":\"TriG\"},\"owner\":\"jakubklimek\"},\"twig\":{\"title\":\"Twig\",\"require\":\"markup\",\"owner\":\"brandonkelly\"},\"typescript\":{\"title\":\"TypeScript\",\"require\":\"javascript\",\"optional\":\"js-templates\",\"alias\":\"ts\",\"owner\":\"vkbansal\"},\"t4-cs\":{\"title\":\"T4 Text Templates (C#)\",\"require\":[\"t4-templating\",\"csharp\"],\"alias\":\"t4\",\"owner\":\"RunDevelopment\"},\"t4-vb\":{\"title\":\"T4 Text Templates (VB)\",\"require\":[\"t4-templating\",\"visual-basic\"],\"owner\":\"RunDevelopment\"},\"t4-templating\":{\"title\":\"T4 templating\",\"owner\":\"RunDevelopment\"},\"vala\":{\"title\":\"Vala\",\"require\":\"clike\",\"owner\":\"TemplarVolk\"},\"vbnet\":{\"title\":\"VB.Net\",\"require\":\"basic\",\"owner\":\"Bigsby\"},\"velocity\":{\"title\":\"Velocity\",\"require\":\"markup\",\"owner\":\"Golmote\"},\"verilog\":{\"title\":\"Verilog\",\"owner\":\"a-rey\"},\"vhdl\":{\"title\":\"VHDL\",\"owner\":\"a-rey\"},\"vim\":{\"title\":\"vim\",\"owner\":\"westonganger\"},\"visual-basic\":{\"title\":\"Visual Basic\",\"alias\":\"vb\",\"owner\":\"Golmote\"},\"wasm\":{\"title\":\"WebAssembly\",\"owner\":\"Golmote\"},\"wiki\":{\"title\":\"Wiki markup\",\"require\":\"markup\",\"owner\":\"Golmote\"},\"xeora\":{\"title\":\"Xeora\",\"require\":\"markup\",\"alias\":\"xeoracube\",\"aliasTitles\":{\"xeoracube\":\"XeoraCube\"},\"owner\":\"freakmaxi\"},\"xojo\":{\"title\":\"Xojo (REALbasic)\",\"owner\":\"Golmote\"},\"xquery\":{\"title\":\"XQuery\",\"require\":\"markup\",\"owner\":\"Golmote\"},\"yaml\":{\"title\":\"YAML\",\"alias\":\"yml\",\"owner\":\"hason\"},\"zig\":{\"title\":\"Zig\",\"owner\":\"RunDevelopment\"}},\"plugins\":{\"meta\":{\"path\":\"plugins/{id}/prism-{id}\",\"link\":\"plugins/{id}/\"},\"line-highlight\":{\"title\":\"Line Highlight\",\"description\":\"Highlights specific lines and/or line ranges.\"},\"line-numbers\":{\"title\":\"Line Numbers\",\"description\":\"Line number at the beginning of code lines.\",\"owner\":\"kuba-kubula\"},\"show-invisibles\":{\"title\":\"Show Invisibles\",\"description\":\"Show hidden characters such as tabs and line breaks.\",\"optional\":[\"autolinker\",\"data-uri-highlight\"]},\"autolinker\":{\"title\":\"Autolinker\",\"description\":\"Converts URLs and emails in code to clickable links. Parses Markdown links in comments.\"},\"wpd\":{\"title\":\"WebPlatform Docs\",\"description\":\"Makes tokens link to <a href=\\\"https://webplatform.github.io/docs/\\\">WebPlatform.org documentation</a>. The links open in a new tab.\"},\"custom-class\":{\"title\":\"Custom Class\",\"description\":\"This plugin allows you to prefix Prism's default classes (<code>.comment</code> can become <code>.namespace--comment</code>) or replace them with your defined ones (like <code>.editor__comment</code>). You can even add new classes.\",\"owner\":\"dvkndn\",\"noCSS\":true},\"file-highlight\":{\"title\":\"File Highlight\",\"description\":\"Fetch external files and highlight them with Prism. Used on the Prism website itself.\",\"noCSS\":true},\"show-language\":{\"title\":\"Show Language\",\"description\":\"Display the highlighted language in code blocks (inline code does not show the label).\",\"owner\":\"nauzilus\",\"noCSS\":true,\"require\":\"toolbar\"},\"jsonp-highlight\":{\"title\":\"JSONP Highlight\",\"description\":\"Fetch content with JSONP and highlight some interesting content (e.g. GitHub/Gists or Bitbucket API).\",\"noCSS\":true,\"owner\":\"nauzilus\"},\"highlight-keywords\":{\"title\":\"Highlight Keywords\",\"description\":\"Adds special CSS classes for each keyword matched in the code. For example, the keyword <code>if</code> will have the class <code>keyword-if</code> as well. You can have fine grained control over the appearance of each keyword by providing your own CSS rules.\",\"owner\":\"vkbansal\",\"noCSS\":true},\"remove-initial-line-feed\":{\"title\":\"Remove initial line feed\",\"description\":\"Removes the initial line feed in code blocks.\",\"owner\":\"Golmote\",\"noCSS\":true},\"inline-color\":{\"title\":\"Inline color\",\"description\":\"Adds a small inline preview for colors in style sheets.\",\"require\":\"css-extras\",\"owner\":\"RunDevelopment\"},\"previewers\":{\"title\":\"Previewers\",\"description\":\"Previewers for angles, colors, gradients, easing and time.\",\"require\":\"css-extras\",\"owner\":\"Golmote\"},\"autoloader\":{\"title\":\"Autoloader\",\"description\":\"Automatically loads the needed languages to highlight the code blocks.\",\"owner\":\"Golmote\",\"noCSS\":true},\"keep-markup\":{\"title\":\"Keep Markup\",\"description\":\"Prevents custom markup from being dropped out during highlighting.\",\"owner\":\"Golmote\",\"optional\":\"normalize-whitespace\",\"noCSS\":true},\"command-line\":{\"title\":\"Command Line\",\"description\":\"Display a command line with a prompt and, optionally, the output/response from the commands.\",\"owner\":\"chriswells0\"},\"unescaped-markup\":{\"title\":\"Unescaped Markup\",\"description\":\"Write markup without having to escape anything.\"},\"normalize-whitespace\":{\"title\":\"Normalize Whitespace\",\"description\":\"Supports multiple operations to normalize whitespace in code blocks.\",\"owner\":\"zeitgeist87\",\"optional\":\"unescaped-markup\",\"noCSS\":true},\"data-uri-highlight\":{\"title\":\"Data-URI Highlight\",\"description\":\"Highlights data-URI contents.\",\"owner\":\"Golmote\",\"noCSS\":true},\"toolbar\":{\"title\":\"Toolbar\",\"description\":\"Attach a toolbar for plugins to easily register buttons on the top of a code block.\",\"owner\":\"mAAdhaTTah\"},\"copy-to-clipboard\":{\"title\":\"Copy to Clipboard Button\",\"description\":\"Add a button that copies the code block to the clipboard when clicked.\",\"owner\":\"mAAdhaTTah\",\"require\":\"toolbar\",\"noCSS\":true},\"download-button\":{\"title\":\"Download Button\",\"description\":\"A button in the toolbar of a code block adding a convenient way to download a code file.\",\"owner\":\"Golmote\",\"require\":\"toolbar\",\"noCSS\":true},\"match-braces\":{\"title\":\"Match braces\",\"description\":\"Highlights matching braces.\",\"owner\":\"RunDevelopment\"},\"diff-highlight\":{\"title\":\"Diff Highlight\",\"description\":\"Highlights the code inside diff blocks.\",\"owner\":\"RunDevelopment\",\"require\":\"diff\"},\"filter-highlight-all\":{\"title\":\"Filter highlightAll\",\"description\":\"Filters the elements the <code>highlightAll</code> and <code>highlightAllUnder</code> methods actually highlight.\",\"owner\":\"RunDevelopment\",\"noCSS\":true}}};\nif (typeof module !== 'undefined' && module.exports) { module.exports = components; }","\"use strict\";\n\n/**\n * @typedef {Object<string, ComponentCategory>} Components\n * @typedef {Object<string, ComponentEntry | string>} ComponentCategory\n *\n * @typedef ComponentEntry\n * @property {string} [title] The title of the component.\n * @property {string} [owner] The GitHub user name of the owner.\n * @property {boolean} [noCSS=false] Whether the component doesn't have style sheets which should also be loaded.\n * @property {string | string[]} [alias] An optional list of aliases for the id of the component.\n * @property {Object<string, string>} [aliasTitles] An optional map from an alias to its title.\n *\n * Aliases which are not in this map will the get title of the component.\n * @property {string | string[]} [optional]\n * @property {string | string[]} [require]\n * @property {string | string[]} [modify]\n */\n\nvar getLoader = (function () {\n\n\t/**\n\t * A function which does absolutely nothing.\n\t *\n\t * @type {any}\n\t */\n\tvar noop = function () { };\n\n\t/**\n\t * Invokes the given callback for all elements of the given value.\n\t *\n\t * If the given value is an array, the callback will be invokes for all elements. If the given value is `null` or\n\t * `undefined`, the callback will not be invoked. In all other cases, the callback will be invoked with the given\n\t * value as parameter.\n\t *\n\t * @param {null | undefined | T | T[]} value\n\t * @param {(value: T, index: number) => void} callbackFn\n\t * @returns {void}\n\t * @template T\n\t */\n\tfunction forEach(value, callbackFn) {\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(callbackFn);\n\t\t} else if (value != null) {\n\t\t\tcallbackFn(value, 0);\n\t\t}\n\t}\n\n\t/**\n\t * Returns a new set for the given string array.\n\t *\n\t * @param {string[]} array\n\t * @returns {StringSet}\n\t *\n\t * @typedef {Object<string, true>} StringSet\n\t */\n\tfunction toSet(array) {\n\t\t/** @type {StringSet} */\n\t\tvar set = {};\n\t\tfor (var i = 0, l = array.length; i < l; i++) {\n\t\t\tset[array[i]] = true;\n\t\t}\n\t\treturn set;\n\t}\n\n\t/**\n\t * Creates a map of every components id to its entry.\n\t *\n\t * @param {Components} components\n\t * @returns {EntryMap}\n\t *\n\t * @typedef {{ readonly [id: string]: Readonly<ComponentEntry> | undefined }} EntryMap\n\t */\n\tfunction createEntryMap(components) {\n\t\t/** @type {Object<string, Readonly<ComponentEntry>>} */\n\t\tvar map = {};\n\n\t\tfor (var categoryName in components) {\n\t\t\tvar category = components[categoryName];\n\t\t\tfor (var id in category) {\n\t\t\t\tif (id != 'meta') {\n\t\t\t\t\t/** @type {ComponentEntry | string} */\n\t\t\t\t\tvar entry = category[id];\n\t\t\t\t\tmap[id] = typeof entry == 'string' ? { title: entry } : entry;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn map;\n\t}\n\n\t/**\n\t * Creates a full dependencies map which includes all types of dependencies and their transitive dependencies.\n\t *\n\t * @param {EntryMap} entryMap\n\t * @returns {DependencyResolver}\n\t *\n\t * @typedef {(id: string) => StringSet} DependencyResolver\n\t */\n\tfunction createDependencyResolver(entryMap) {\n\t\t/** @type {Object<string, StringSet>} */\n\t\tvar map = {};\n\t\tvar _stackArray = [];\n\n\t\t/**\n\t\t * Adds the dependencies of the given component to the dependency map.\n\t\t *\n\t\t * @param {string} id\n\t\t * @param {string[]} stack\n\t\t */\n\t\tfunction addToMap(id, stack) {\n\t\t\tif (id in map) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstack.push(id);\n\n\t\t\t// check for circular dependencies\n\t\t\tvar firstIndex = stack.indexOf(id);\n\t\t\tif (firstIndex < stack.length - 1) {\n\t\t\t\tthrow new Error('Circular dependency: ' + stack.slice(firstIndex).join(' -> '));\n\t\t\t}\n\n\t\t\t/** @type {StringSet} */\n\t\t\tvar dependencies = {};\n\n\t\t\tvar entry = entryMap[id];\n\t\t\tif (entry) {\n\t\t\t\t/**\n\t\t\t\t * This will add the direct dependency and all of its transitive dependencies to the set of\n\t\t\t\t * dependencies of `entry`.\n\t\t\t\t *\n\t\t\t\t * @param {string} depId\n\t\t\t\t * @returns {void}\n\t\t\t\t */\n\t\t\t\tfunction handleDirectDependency(depId) {\n\t\t\t\t\tif (!(depId in entryMap)) {\n\t\t\t\t\t\tthrow new Error(id + ' depends on an unknown component ' + depId);\n\t\t\t\t\t}\n\t\t\t\t\tif (depId in dependencies) {\n\t\t\t\t\t\t// if the given dependency is already in the set of deps, then so are its transitive deps\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\taddToMap(depId, stack);\n\t\t\t\t\tdependencies[depId] = true;\n\t\t\t\t\tfor (var transitiveDepId in map[depId]) {\n\t\t\t\t\t\tdependencies[transitiveDepId] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tforEach(entry.require, handleDirectDependency);\n\t\t\t\tforEach(entry.optional, handleDirectDependency);\n\t\t\t\tforEach(entry.modify, handleDirectDependency);\n\t\t\t}\n\n\t\t\tmap[id] = dependencies;\n\n\t\t\tstack.pop();\n\t\t}\n\n\t\treturn function (id) {\n\t\t\tvar deps = map[id];\n\t\t\tif (!deps) {\n\t\t\t\taddToMap(id, _stackArray);\n\t\t\t\tdeps = map[id];\n\t\t\t}\n\t\t\treturn deps;\n\t\t};\n\t}\n\n\t/**\n\t * Returns a function which resolves the aliases of its given id of alias.\n\t *\n\t * @param {EntryMap} entryMap\n\t * @returns {(idOrAlias: string) => string}\n\t */\n\tfunction createAliasResolver(entryMap) {\n\t\t/** @type {Object<string, string> | undefined} */\n\t\tvar map;\n\n\t\treturn function (idOrAlias) {\n\t\t\tif (idOrAlias in entryMap) {\n\t\t\t\treturn idOrAlias;\n\t\t\t} else {\n\t\t\t\t// only create the alias map if necessary\n\t\t\t\tif (!map) {\n\t\t\t\t\tmap = {};\n\n\t\t\t\t\tfor (var id in entryMap) {\n\t\t\t\t\t\tvar entry = entryMap[id];\n\t\t\t\t\t\tforEach(entry && entry.alias, function (alias) {\n\t\t\t\t\t\t\tif (alias in map) {\n\t\t\t\t\t\t\t\tthrow new Error(alias + ' cannot be alias for both ' + id + ' and ' + map[alias]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (alias in entryMap) {\n\t\t\t\t\t\t\t\tthrow new Error(alias + ' cannot be alias of ' + id + ' because it is a component.');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmap[alias] = id;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn map[idOrAlias] || idOrAlias;\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * @typedef LoadChainer\n\t * @property {(before: T, after: () => T) => T} series\n\t * @property {(values: T[]) => T} parallel\n\t * @template T\n\t */\n\n\t/**\n\t * Creates an implicit DAG from the given components and dependencies and call the given `loadComponent` for each\n\t * component in topological order.\n\t *\n\t * @param {DependencyResolver} dependencyResolver\n\t * @param {StringSet} ids\n\t * @param {(id: string) => T} loadComponent\n\t * @param {LoadChainer<T>} [chainer]\n\t * @returns {T}\n\t * @template T\n\t */\n\tfunction loadComponentsInOrder(dependencyResolver, ids, loadComponent, chainer) {\n\t\tconst series = chainer ? chainer.series : undefined;\n\t\tconst parallel = chainer ? chainer.parallel : noop;\n\n\t\t/** @type {Object<string, T>} */\n\t\tvar cache = {};\n\n\t\t/**\n\t\t * A set of ids of nodes which are not depended upon by any other node in the graph.\n\t\t * @type {StringSet}\n\t\t */\n\t\tvar ends = {};\n\n\t\t/**\n\t\t * Loads the given component and its dependencies or returns the cached value.\n\t\t *\n\t\t * @param {string} id\n\t\t * @returns {T}\n\t\t */\n\t\tfunction handleId(id) {\n\t\t\tif (id in cache) {\n\t\t\t\treturn cache[id];\n\t\t\t}\n\n\t\t\t// assume that it's an end\n\t\t\t// if it isn't, it will be removed later\n\t\t\tends[id] = true;\n\n\t\t\t// all dependencies of the component in the given ids\n\t\t\tvar dependsOn = [];\n\t\t\tfor (var depId in dependencyResolver(id)) {\n\t\t\t\tif (depId in ids) {\n\t\t\t\t\tdependsOn.push(depId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * The value to be returned.\n\t\t\t * @type {T}\n\t\t\t */\n\t\t\tvar value;\n\n\t\t\tif (dependsOn.length === 0) {\n\t\t\t\tvalue = loadComponent(id);\n\t\t\t} else {\n\t\t\t\tvar depsValue = parallel(dependsOn.map(function (depId) {\n\t\t\t\t\tvar value = handleId(depId);\n\t\t\t\t\t// none of the dependencies can be ends\n\t\t\t\t\tdelete ends[depId];\n\t\t\t\t\treturn value;\n\t\t\t\t}));\n\t\t\t\tif (series) {\n\t\t\t\t\t// the chainer will be responsibly for calling the function calling loadComponent\n\t\t\t\t\tvalue = series(depsValue, function () { return loadComponent(id); });\n\t\t\t\t} else {\n\t\t\t\t\t// we don't have a chainer, so we call loadComponent ourselves\n\t\t\t\t\tloadComponent(id);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// cache and return\n\t\t\treturn cache[id] = value;\n\t\t}\n\n\t\tfor (var id in ids) {\n\t\t\thandleId(id);\n\t\t}\n\n\t\t/** @type {T[]} */\n\t\tvar endValues = [];\n\t\tfor (var endId in ends) {\n\t\t\tendValues.push(cache[endId]);\n\t\t}\n\t\treturn parallel(endValues);\n\t}\n\n\t/**\n\t * Returns whether the given object has any keys.\n\t *\n\t * @param {object} obj\n\t */\n\tfunction hasKeys(obj) {\n\t\tfor (var key in obj) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns an object which provides methods to get the ids of the components which have to be loaded (`getIds`) and\n\t * a way to efficiently load them in synchronously and asynchronous contexts (`load`).\n\t *\n\t * The set of ids to be loaded is a superset of `load`. If some of these ids are in `loaded`, the corresponding\n\t * components will have to reloaded.\n\t *\n\t * The ids in `load` and `loaded` may be in any order and can contain duplicates.\n\t *\n\t * @param {Components} components\n\t * @param {string[]} load\n\t * @param {string[]} [loaded=[]] A list of already loaded components.\n\t *\n\t * If a component is in this list, then all of its requirements will also be assumed to be in the list.\n\t * @returns {Loader}\n\t *\n\t * @typedef Loader\n\t * @property {() => string[]} getIds A function to get all ids of the components to load.\n\t *\n\t * The returned ids will be duplicate-free, alias-free and in load order.\n\t * @property {LoadFunction} load A functional interface to load components.\n\t *\n\t * @typedef {<T> (loadComponent: (id: string) => T, chainer?: LoadChainer<T>) => T} LoadFunction\n\t * A functional interface to load components.\n\t *\n\t * The `loadComponent` function will be called for every component in the order in which they have to be loaded.\n\t *\n\t * The `chainer` is useful for asynchronous loading and its `series` and `parallel` functions can be thought of as\n\t * `Promise#then` and `Promise.all`.\n\t *\n\t * @example\n\t * load(id => { loadComponent(id); }); // returns undefined\n\t *\n\t * await load(\n\t *     id => loadComponentAsync(id), // returns a Promise for each id\n\t *     {\n\t *         series: async (before, after) => {\n\t *             await before;\n\t *             await after();\n\t *         },\n\t *         parallel: async (values) => {\n\t *             await Promise.all(values);\n\t *         }\n\t *     }\n\t * );\n\t */\n\tfunction getLoader(components, load, loaded) {\n\t\tvar entryMap = createEntryMap(components);\n\t\tvar resolveAlias = createAliasResolver(entryMap);\n\n\t\tload = load.map(resolveAlias);\n\t\tloaded = (loaded || []).map(resolveAlias);\n\n\t\tvar loadSet = toSet(load);\n\t\tvar loadedSet = toSet(loaded);\n\n\t\t// add requirements\n\n\t\tload.forEach(addRequirements);\n\t\tfunction addRequirements(id) {\n\t\t\tvar entry = entryMap[id];\n\t\t\tforEach(entry && entry.require, function (reqId) {\n\t\t\t\tif (!(reqId in loadedSet)) {\n\t\t\t\t\tloadSet[reqId] = true;\n\t\t\t\t\taddRequirements(reqId);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// add components to reload\n\n\t\t// A component x in `loaded` has to be reloaded if\n\t\t//  1) a component in `load` modifies x.\n\t\t//  2) x depends on a component in `load`.\n\t\t// The above two condition have to be applied until nothing changes anymore.\n\n\t\tvar dependencyResolver = createDependencyResolver(entryMap);\n\n\t\t/** @type {StringSet} */\n\t\tvar loadAdditions = loadSet;\n\t\t/** @type {StringSet} */\n\t\tvar newIds;\n\t\twhile (hasKeys(loadAdditions)) {\n\t\t\tnewIds = {};\n\n\t\t\t// condition 1)\n\t\t\tfor (var loadId in loadAdditions) {\n\t\t\t\tvar entry = entryMap[loadId];\n\t\t\t\tforEach(entry && entry.modify, function (modId) {\n\t\t\t\t\tif (modId in loadedSet) {\n\t\t\t\t\t\tnewIds[modId] = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// condition 2)\n\t\t\tfor (var loadedId in loadedSet) {\n\t\t\t\tif (!(loadedId in loadSet)) {\n\t\t\t\t\tfor (var depId in dependencyResolver(loadedId)) {\n\t\t\t\t\t\tif (depId in loadSet) {\n\t\t\t\t\t\t\tnewIds[loadedId] = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tloadAdditions = newIds;\n\t\t\tfor (var newId in loadAdditions) {\n\t\t\t\tloadSet[newId] = true;\n\t\t\t}\n\t\t}\n\n\t\t/** @type {Loader} */\n\t\tvar loader = {\n\t\t\tgetIds: function () {\n\t\t\t\tvar ids = [];\n\t\t\t\tloader.load(function (id) {\n\t\t\t\t\tids.push(id);\n\t\t\t\t});\n\t\t\t\treturn ids;\n\t\t\t},\n\t\t\tload: function (loadComponent, chainer) {\n\t\t\t\treturn loadComponentsInOrder(dependencyResolver, loadSet, loadComponent, chainer);\n\t\t\t}\n\t\t};\n\n\t\treturn loader;\n\t}\n\n\treturn getLoader;\n\n}());\n\nif (typeof module !== 'undefined') {\n\tmodule.exports = getLoader;\n}\n","const components = require('../components.js');\nconst getLoader = require('../dependencies');\n\n\n/**\n * The set of all languages which have been loaded using the below function.\n *\n * @type {Set<string>}\n */\nconst loadedLanguages = new Set();\n\n/**\n * Loads the given languages and adds them to the current Prism instance.\n *\n * If no languages are provided, __all__ Prism languages will be loaded.\n *\n * @param {string|string[]} [languages]\n * @returns {void}\n */\nfunction loadLanguages(languages) {\n\tif (languages === undefined) {\n\t\tlanguages = Object.keys(components.languages).filter(l => l != 'meta');\n\t} else if (!Array.isArray(languages)) {\n\t\tlanguages = [languages];\n\t}\n\n\t// the user might have loaded languages via some other way or used `prism.js` which already includes some\n\t// we don't need to validate the ids because `getLoader` will ignore invalid ones\n\tconst loaded = [...loadedLanguages, ...Object.keys(Prism.languages)];\n\n\tgetLoader(components, languages, loaded).load(lang => {\n\t\tif (!(lang in components.languages)) {\n\t\t\tif (!loadLanguages.silent) {\n\t\t\t\tconsole.warn('Language does not exist: ' + lang);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tconst pathToLanguage = './prism-' + lang;\n\n\t\t// remove from require cache and from Prism\n\t\tdelete require.cache[require.resolve(pathToLanguage)];\n\t\tdelete Prism.languages[lang];\n\n\t\trequire(pathToLanguage);\n\n\t\tloadedLanguages.add(lang);\n\t});\n}\n\n/**\n * Set this to `true` to prevent all warning messages `loadLanguages` logs.\n */\nloadLanguages.silent = false;\n\nmodule.exports = loadLanguages;\n","import Undyne from \"./undyne\";\nimport \"./style.styl\";\nimport \"./dracula-prism.css\";\nimport fs from \"fs\";\nimport prism from \"prismjs\";\nimport loadLanguages from \"prismjs/components/index\";\n\nclass PrismUndyne extends Undyne {\n  constructor(canvas) {\n    super(canvas);\n    this.fontFamily = \"Fira Code\";\n  }\n  tokenize() {\n    this.colorMap = this.colorMap || {};\n    const flattenTokens = token =>\n      token.content && Array.isArray(token.content)\n        ? token.content.map(flattenTokens)\n        : token;\n    const convertToken = token => {\n      if (token.content) {\n        if (!this.colorMap[token.type]) {\n          const el = document.createElement(\"span\");\n          el.innerText = token.content;\n          el.classList.add(\"token\", token.type);\n          document.body.appendChild(el);\n          const { color } = window.getComputedStyle(el);\n          el.remove();\n          this.colorMap[token.type] = color;\n        }\n        return {\n          content: token.content,\n          color: this.colorMap[token.type]\n        };\n      }\n      return { content: token };\n    };\n    const tokens = prism\n      .tokenize(this.content, prism.languages.javascript)\n      .map(flattenTokens)\n      .flat(5)\n      .map(convertToken)\n      .map(token =>\n        token.content.includes(\"\\n\")\n          ? token.content\n              .split(/(?=\\n)|(?<=\\n)/)\n              .map(content => ({ ...token, content }))\n          : token\n      )\n      .flat();\n    const lines = [];\n    let line = [];\n    while (tokens.length) {\n      const token = tokens.shift();\n      if (token.content == \"\\n\") {\n        lines.push(line);\n        line = [];\n      } else {\n        line.push(token);\n      }\n    }\n    if (line.length) lines.push(line);\n    if (this.content.endsWith(\"\\n\")) lines.push([]);\n    return lines;\n  }\n}\n\nconst canvas = document.getElementById(\"undyne\");\nif (document.body.clientWidth < 992) {\n  const width = document.body.clientWidth - 64;\n  canvas.width = width;\n  canvas.setAttribute(\"width\", width + \"px\");\n  canvas.style.width = width + \"px\";\n}\nconst editor = new PrismUndyne(canvas);\neditor.content = fs.readFileSync(\"./undyne.js\", { encoding: \"utf8\" });\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}