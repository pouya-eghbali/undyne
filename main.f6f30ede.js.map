{"version":3,"sources":["undyne.js","node_modules/prismjs/prism.js","node_modules/prismjs/components.js","node_modules/prismjs/dependencies.js","node_modules/prismjs/components/index.js","main.js"],"names":["Undyne","canvas","ctx","getContext","content","scrollLeft","scrollTop","caretX","caretY","blinkIn","makeInput","installEventHandlers","retina","render","caretInterval","setInterval","caret","fontSize","lineSpacing","lineHeight","fontFamily","charWidth","getCharWidth","rows","getRows","columns","getColumns","foreground","input","document","createElement","setAttribute","style","transform","value","body","append","scrollingElement","focus","preventScroll","widthAttr","getAttribute","heightAttr","width","Number","slice","height","scale","Math","ceil","addEventListener","event","onKeyDown","onMouseDown","onMouseUp","onMouseMove","ev","onTouchStart","onTouchEnd","onTouchMove","onWheel","onDblClick","deltaY","scrollY","getLines","length","toString","preventDefault","isDown","leftPad","getLeftPad","touch","touches","rect","getBoundingClientRect","downPos","x","clientX","left","y","clientY","top","scrollTouch","changedTouches","upPos","click","select","scrollX","pos","lines","rowAtY","floor","colAtX","lineAtY","firstWordStart","search","firstWhiteAfterX","firstWordEnd","selection","startX","endX","startY","endY","clear","deltaCols","newScroll","maxScroll","min","deltaX","nullifySelection","offsetX","offsetY","moveCaret","upDownSelection","max","endLength","startLength","lineCount","keyCode","setTimeout","insertAtCaret","key","caretToEnd","shiftKey","caretToHome","startsWith","direction","replace","toLowerCase","ctrlKey","metaKey","copy","paste","delete","includes","text","getSelection","navigator","clipboard","writeText","readText","then","splice","join","firstLine","lastLine","rest","str","hasSelection","pre","curr","post","right","lastOfPre","pop","caretMax","dx","dy","caretAtEnd","scrollToCaret","deltaRows","save","fillStyle","fillRect","i","restore","drawSelectBackground","lineNumbers","Array","fill","map","n","lineNumberMaxWidth","tokenLinesToDraw","tokenize","line","removed","token","shift","unshift","forEach","index","lineNumber","formattedLineNumber","repeat","font","fillText","color","split","caretVisible","beginPath","strokeStyle","moveTo","lineTo","stroke","div","innerText","display","appendChild","window","getComputedStyle","remove","module","exports","PrismUndyne","colorMap","tokens","flattenTokens","prism","languages","javascript","isArray","flat","type","el","classList","add","push","endsWith","getElementById","clientWidth","editor"],"mappings":"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","file":"main.f6f30ede.js","sourceRoot":"www","sourcesContent":["class Undyne {\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext(\"2d\");\n    this.content = \"\";\n    this.scrollLeft = 0;\n    this.scrollTop = 0;\n    this.caretX = 0;\n    this.caretY = 0;\n    this.blinkIn = true;\n    this.makeInput();\n    this.installEventHandlers();\n    this.retina();\n    this.render();\n    this.caretInterval = setInterval(() => this.caret(), 500);\n    this.fontSize = 16;\n    this.lineSpacing = 2;\n    this.lineHeight = this.fontSize + this.lineSpacing;\n    this.fontFamily = \"monospace\";\n    this.charWidth = this.getCharWidth();\n    this.rows = this.getRows();\n    this.columns = this.getColumns();\n    this.foreground = \"#f8f8f2\";\n  }\n  makeInput() {\n    this.input = document.createElement(\"input\");\n    this.input.setAttribute(\"type\", \"text\");\n    this.input.style.transform = \"translateX(-99999px) translateY(-99999px)\";\n    this.input.value = \"X\";\n    document.body.append(this.input);\n  }\n  focus() {\n    const { scrollTop, scrollLeft } = document.scrollingElement;\n    this.input.focus({ preventScroll: true });\n    document.scrollingElement.scrollTop = scrollTop;\n    document.scrollingElement.scrollLeft = scrollLeft;\n  }\n  retina() {\n    const widthAttr = this.canvas.getAttribute(\"width\");\n    const heightAttr = this.canvas.getAttribute(\"height\");\n    const width = Number(widthAttr.slice(0, -2));\n    const height = Number(heightAttr.slice(0, -2));\n    this.canvas.setAttribute(\"width\", `${width * 2}px`);\n    this.canvas.setAttribute(\"height\", `${height * 2}px`);\n    this.canvas.style.width = widthAttr;\n    this.canvas.style.height = heightAttr;\n    this.ctx.scale(0.5, 0.5);\n  }\n  getColumns() {\n    return Math.ceil(this.canvas.width / 2 / this.charWidth);\n  }\n  getRows() {\n    return Math.ceil(this.canvas.height / 2 / this.lineHeight);\n  }\n  installEventHandlers() {\n    this.canvas.setAttribute(\"tabindex\", \"0\");\n    this.focus();\n    this.input.addEventListener(\"keydown\", event => this.onKeyDown(event));\n    this.canvas.addEventListener(\"mousedown\", event => this.onMouseDown(event));\n    this.canvas.addEventListener(\"mouseup\", event => this.onMouseUp(event));\n    this.canvas.addEventListener(\"mousemove\", event => this.onMouseMove(event));\n    this.canvas.addEventListener(\"touchstart\", ev => this.onTouchStart(ev));\n    this.canvas.addEventListener(\"touchend\", event => this.onTouchEnd(event));\n    this.canvas.addEventListener(\"touchmove\", event => this.onTouchMove(event));\n    this.canvas.addEventListener(\"wheel\", event => this.onWheel(event));\n    this.canvas.addEventListener(\"dblclick\", event => this.onDblClick(event));\n  }\n  onWheel(event) {\n    const { deltaY } = event;\n    this.scrollY(deltaY);\n  }\n  getLeftPad() {\n    return this.getLines().length.toString().length + 3;\n  }\n  onTouchStart(event) {\n    event.preventDefault();\n    this.focus();\n    this.isDown = true;\n    const leftPad = this.getLeftPad() * this.charWidth;\n    const touch = event.touches[0];\n    const rect = this.canvas.getBoundingClientRect();\n    this.downPos = {\n      x: touch.clientX - rect.left - leftPad,\n      y: touch.clientY - rect.top\n    };\n    this.scrollTouch = event.touches.length > 1;\n  }\n  onTouchEnd(event) {\n    event.preventDefault();\n    this.isDown = false;\n    const leftPad = this.getLeftPad() * this.charWidth;\n    const touch = event.changedTouches[0];\n    const rect = this.canvas.getBoundingClientRect();\n    this.upPos = {\n      x: touch.clientX - rect.left - leftPad,\n      y: touch.clientY - rect.top\n    };\n    if (!this.scrollTouch)\n      if (this.downPos.x == this.upPos.x && this.downPos.y == this.upPos.y)\n        this.click();\n      else this.select();\n  }\n  onTouchMove(event) {\n    if (!this.isDown) return;\n    const leftPad = this.getLeftPad() * this.charWidth;\n    const touch = event.touches[0];\n    const rect = this.canvas.getBoundingClientRect();\n    this.upPos = {\n      x: touch.clientX - rect.left - leftPad,\n      y: touch.clientY - rect.top\n    };\n    if (!this.scrollTouch) {\n      this.select();\n      this.click(false);\n    } else {\n      this.scrollY(this.downPos.y - this.upPos.y);\n      this.scrollX(this.downPos.x - this.upPos.x);\n    }\n  }\n  onDblClick(event) {\n    event.preventDefault();\n    const leftPad = this.getLeftPad();\n    const rect = this.canvas.getBoundingClientRect();\n    const pos = {\n      x: event.clientX - rect.left - leftPad * this.charWidth,\n      y: event.clientY - rect.top\n    };\n    const lines = this.getLines()\n      .slice(this.scrollTop)\n      .slice(0, this.rows);\n    const rowAtY = Math.floor(pos.y / this.lineHeight);\n    const colAtX = Math.floor(pos.x / this.charWidth);\n    const lineAtY = lines[rowAtY];\n    const firstWordStart = lineAtY\n      .slice(0, colAtX + 1)\n      .search(/[^\\[\\]\\(\\).\"' !@#$%^&=-]+$/);\n    const firstWhiteAfterX = lineAtY\n      .slice(colAtX)\n      .search(/[\\[\\]\\(\\).\"' !@#$%^&=-]/);\n    const firstWordEnd =\n      firstWhiteAfterX < 0 ? lineAtY.length : colAtX + firstWhiteAfterX;\n    this.selection = {\n      startX: firstWordStart,\n      endX: firstWordEnd,\n      startY: rowAtY,\n      endY: rowAtY\n    };\n    this.clear();\n    this.render();\n  }\n  scrollY(deltaY) {\n    const deltaCols = Math.floor(deltaY / this.lineHeight);\n    const newScroll = deltaCols + this.scrollTop;\n    if (newScroll < 0) return (this.scrollTop = 0);\n    const lines = this.getLines().length;\n    const maxScroll = lines - Math.min(lines, this.rows + 1);\n    if (newScroll < maxScroll) this.scrollTop = newScroll;\n    else this.scrollTop = maxScroll;\n    this.clear();\n    this.render();\n  }\n  scrollX(deltaX) {\n    const deltaCols = Math.floor(deltaX / this.charWidth);\n    const newScroll = deltaCols + this.scrollLeft;\n    if (newScroll < 0) return (this.scrollLeft = 0);\n    const maxScroll = this.getLines()[this.scrollTop].length;\n    if (newScroll < maxScroll) this.scrollLeft = newScroll;\n    else this.scrollLeft = maxScroll;\n    this.clear();\n    this.render();\n  }\n  onMouseDown(event) {\n    event.preventDefault();\n    this.focus();\n    this.isDown = true;\n    const leftPad = this.getLeftPad() * this.charWidth;\n    const rect = this.canvas.getBoundingClientRect();\n    this.downPos = {\n      x: event.clientX - rect.left - leftPad,\n      y: event.clientY - rect.top\n    };\n  }\n  onMouseUp(event) {\n    event.preventDefault();\n    this.isDown = false;\n    const leftPad = this.getLeftPad() * this.charWidth;\n    const rect = this.canvas.getBoundingClientRect();\n    this.upPos = {\n      x: event.clientX - rect.left - leftPad,\n      y: event.clientY - rect.top\n    };\n    if (this.downPos.x == this.upPos.x && this.downPos.y == this.upPos.y)\n      this.click();\n    else this.select();\n  }\n  onMouseMove(event) {\n    if (!this.isDown) return;\n    const leftPad = this.getLeftPad() * this.charWidth;\n    const rect = this.canvas.getBoundingClientRect();\n    this.upPos = {\n      x: event.clientX - rect.left - leftPad,\n      y: event.clientY - rect.top\n    };\n    this.select();\n    this.click(false);\n  }\n  click(nullifySelection = true) {\n    const { x, y } = this.upPos;\n    const offsetX = Math.floor(x / this.charWidth) + this.scrollLeft;\n    const offsetY = Math.floor(y / this.lineHeight) + this.scrollTop;\n    const deltaX = offsetX - this.caretX;\n    const deltaY = offsetY - this.caretY;\n    if (nullifySelection) this.selection = null;\n    this.moveCaret(deltaX, deltaY);\n  }\n  select() {\n    const leftPad = this.getLeftPad();\n    const selection = {\n      startX:\n        Math.floor((this.downPos.x - leftPad) / this.charWidth) +\n        this.scrollLeft,\n      startY: Math.floor(this.downPos.y / this.lineHeight) + this.scrollTop,\n      endX:\n        Math.floor((this.upPos.x - leftPad) / this.charWidth) + this.scrollLeft,\n      endY: Math.floor(this.upPos.y / this.lineHeight) + this.scrollTop\n    };\n    const { endY, startY, endX, startX } = selection;\n    this.upDownSelection = true;\n    if (endY < startY) {\n      selection.endY = startY;\n      selection.startY = endY;\n      selection.endX = startX;\n      selection.startX = endX;\n      this.upDownSelection = false;\n    }\n    const lines = this.getLines();\n    selection.endY = Math.min(selection.endY, lines.length - 1);\n    selection.startY = Math.max(\n      Math.min(selection.startY, lines.length - 1),\n      0\n    );\n    if (endY == startY && startX > endX) {\n      selection.endX = startX;\n      selection.startX = endX;\n      this.upDownSelection = false;\n    }\n    const endLength = lines[selection.endY].length;\n    const startLength = lines[selection.startY].length;\n    selection.endX = Math.max(Math.min(selection.endX, endLength), 0);\n    selection.startX = Math.max(Math.min(selection.startX, startLength), 0);\n    const lineCount = lines.length;\n    if (selection.endY < lineCount && selection.startY < lineCount)\n      this.selection = selection;\n    this.clear();\n    this.render();\n  }\n  onKeyDown(event) {\n    event.preventDefault();\n    if (event.keyCode == 229) {\n      return setTimeout(() => {\n        const value = this.input.value.slice(1);\n        this.input.value = \"X\";\n        this.insertAtCaret(value);\n      }, 0);\n    }\n    const { key } = event;\n    const ignoreList = [\"Shift\", \"Control\", \"Alt\", \"Meta\"];\n    if (key == \"End\") this.caretToEnd(event.shiftKey);\n    else if (key == \"Home\") this.caretToHome(event.shiftKey);\n    else if (key.startsWith(\"Arrow\")) {\n      const direction = key.replace(/^Arrow/, \"\").toLowerCase();\n      if (direction == \"left\") this.moveCaret(-1, 0, event.shiftKey);\n      else if (direction == \"right\") this.moveCaret(1, 0, event.shiftKey);\n      else if (direction == \"down\") this.moveCaret(0, 1, event.shiftKey);\n      else if (direction == \"up\") this.moveCaret(0, -1, event.shiftKey);\n    } else if (event.ctrlKey || event.metaKey) {\n      if (key == \"c\") {\n        this.copy();\n      } else if (key == \"v\") {\n        this.paste();\n      } else if (key == \"x\") {\n        this.copy();\n        this.delete();\n      }\n    } else if (ignoreList.includes(key)) {\n      return;\n    } else {\n      this.insertAtCaret(key);\n    }\n  }\n  copy() {\n    if (!this.selection) return;\n    const text = this.getSelection();\n    navigator.clipboard.writeText(text);\n  }\n  paste() {\n    if (this.selection) this.delete();\n    navigator.clipboard.readText().then(text => this.insertAtCaret(text));\n  }\n  delete() {\n    if (!this.selection) return;\n    const { startX, startY, endX, endY } = this.selection;\n    const lines = this.getLines();\n    if (startY == endY) {\n      lines[endY] = lines[endY].slice(0, startX) + lines[endY].slice(endX);\n    } else {\n      lines[startY] = lines[startY].slice(0, startX) + lines[endY].slice(endX);\n      lines.splice(startY + 1, endY - startY);\n    }\n    this.content = lines.join(\"\\n\");\n    this.selection = null;\n    if (!this.upDownSelection) return;\n    const deltaX = startX - endX;\n    const deltaY = startY - endY;\n    this.moveCaret(deltaX, deltaY);\n  }\n  getSelection() {\n    const { startX, startY, endX, endY } = this.selection;\n    const lines = this.getLines();\n    if (startY == endY) {\n      return lines[startY].slice(startX, endX);\n    } else {\n      const firstLine = lines[startY].slice(startX);\n      const lastLine = lines[endY].slice(0, endX);\n      const rest = lines.slice(startY + 1, endY);\n      return [firstLine, ...rest, lastLine].join(\"\\n\");\n    }\n  }\n  insertAtCaret(str) {\n    const hasSelection = !!this.selection;\n    this.delete();\n    const lines = this.getLines();\n    const pre = lines.slice(0, this.caretY);\n    const curr = lines[this.caretY];\n    const post = lines.slice(this.caretY + 1);\n    const left = curr.slice(0, this.caretX);\n    const right = curr.slice(this.caretX);\n    if (str == \"Enter\") {\n      this.content = [...pre, left, right, ...post].join(\"\\n\");\n      this.moveCaret(-this.caretX, 1);\n    } else if (str == \"Tab\") {\n      this.content = [...pre, left + \"  \" + right, ...post].join(\"\\n\");\n      this.moveCaret(2, 0);\n    } else if (str == \"Backspace\") {\n      if (hasSelection) return;\n      if (!left.length) {\n        const lastOfPre = pre.pop() || \"\";\n        this.content = [...pre, lastOfPre + right, ...post].join(\"\\n\");\n        this.moveCaret(lastOfPre.length - this.caretX, -1);\n      } else {\n        this.content = [...pre, left.slice(0, -1) + right, ...post].join(\"\\n\");\n        this.moveCaret(-1, 0);\n      }\n    } else {\n      this.content = [...pre, left + str + right, ...post].join(\"\\n\");\n      this.moveCaret(str.length, 0);\n    }\n    this.clear();\n    this.render();\n  }\n  caretToHome(select) {\n    if (select) {\n      const startX = 0;\n      const startY = this.selection ? this.selection.startY : this.caretY;\n      const endY = this.selection ? this.selection.endY : this.caretY;\n      const endX = this.selection ? this.selection.endX : this.caretX;\n      this.selection = { startX, endX, startY, endY };\n    }\n    this.caretX = 0;\n    this.caret();\n  }\n  caretToEnd(select = false) {\n    const caretMax = this.getLines()[this.caretY].length;\n    if (select) {\n      const startX = this.selection ? this.selection.startX : this.caretX;\n      const startY = this.selection ? this.selection.startY : this.caretY;\n      const endY = this.selection ? this.selection.endY : this.caretY;\n      const endX = caretMax;\n      this.selection = { startX, endX, startY, endY };\n    }\n    this.caretX = caretMax;\n    this.caret();\n  }\n  moveCaret(dx = 0, dy = 0, select = false) {\n    if (dx + this.caretX < 0) return;\n    if (dy + this.caretY < 0) return;\n    const lines = this.getLines();\n    if (dy + this.caretY > lines.length - 1) return;\n    if (select) {\n      const selection = this.selection || {};\n      if (this.selection) {\n        const caretAtEnd = this.caretY == selection.endY;\n        if (caretAtEnd) selection.endY += dy;\n        else selection.startY += dy;\n        if (caretAtEnd) selection.endX += dx;\n        else selection.startX += dx;\n      } else {\n        selection.startY = this.caretY;\n        selection.endY = this.caretY + dy;\n        selection.startX = this.caretX;\n        selection.endX = this.caretX + dx;\n      }\n      const { endY, startY, endX, startX } = selection;\n      if (endY < startY) {\n        selection.endY = startY;\n        selection.startY = endY;\n        selection.endX = startX;\n        selection.startX = endX;\n      }\n      selection.endX = Math.min(lines[selection.endY].length, selection.endX);\n      this.selection = selection;\n    }\n    if (dy + this.caretY < lines.length) this.caretY += dy;\n    else this.caretY = lines.length;\n    if (dx + this.caretX <= lines[this.caretY].length) this.caretX += dx;\n    else this.caretX = lines[this.caretY].length;\n    this.scrollToCaret();\n    this.caret();\n  }\n  scrollToCaret() {\n    if (this.caretY >= this.scrollTop + this.rows - 1) {\n      const deltaRows = this.caretY - this.rows - this.scrollTop + 2;\n      this.scrollY(deltaRows * this.lineHeight);\n    }\n    if (this.caretY < this.scrollTop) {\n      const deltaRows = this.caretY - this.scrollTop;\n      this.scrollY(deltaRows * this.lineHeight);\n    }\n    if (this.caretX > this.scrollLeft + this.columns - 2) {\n      const deltaCols = this.caretX - this.scrollLeft - this.columns + 2;\n      this.scrollX(deltaCols * this.charWidth);\n    }\n    if (this.caretX < this.scrollLeft) {\n      const deltaCols = this.caretX - this.scrollLeft;\n      this.scrollX(deltaCols * this.charWidth);\n    }\n  }\n  drawSelectBackground() {\n    if (!this.selection) return;\n    const lines = this.getLines();\n    const leftPad = this.getLeftPad();\n    const { startX, startY, endX, endY } = this.selection;\n    const deltaX = this.scrollLeft;\n    const deltaY = this.scrollTop;\n    this.ctx.save();\n    this.ctx.fillStyle = \"rgba(68, 71, 90, 1)\";\n    if (startY == endY) {\n      this.ctx.fillRect(\n        (startX - deltaX + leftPad) * this.charWidth,\n        (startY - deltaY) * this.lineHeight + this.lineSpacing,\n        (endX - startX) * this.charWidth,\n        this.lineHeight\n      );\n    } else {\n      this.ctx.fillRect(\n        (startX - deltaX + leftPad) * this.charWidth,\n        (startY - deltaY) * this.lineHeight + this.lineSpacing,\n        (lines[startY].length - startX + leftPad) * this.charWidth,\n        this.lineHeight\n      );\n      for (let i = startY + 1; i < endY; i++)\n        this.ctx.fillRect(\n          leftPad * this.charWidth,\n          (i - deltaY) * this.lineHeight + this.lineSpacing,\n          lines[i].length * this.charWidth,\n          this.lineHeight\n        );\n      this.ctx.fillRect(\n        leftPad * this.charWidth,\n        (endY - deltaY) * this.lineHeight + this.lineSpacing,\n        endX * this.charWidth,\n        this.lineHeight\n      );\n    }\n    this.ctx.restore();\n  }\n  render() {\n    this.ctx.scale(2, 2);\n    this.drawSelectBackground();\n    const lineNumbers = Array(this.rows)\n      .fill(this.scrollTop + 1)\n      .map((n, i) => n + i);\n    const lineNumberMaxWidth = this.getLines().length.toString().length;\n    const tokens = this.tokenize();\n    const visibleTokenLines = tokens.slice(this.scrollTop).slice(0, this.rows);\n    const tokenLinesToDraw = visibleTokenLines.map(line => {\n      let removed = 0;\n      while (true) {\n        const token = line.shift();\n        if (!token) return [{ content: \"\" }];\n        if (removed + token.content.length < this.scrollLeft) {\n          removed += token.content.length;\n          continue;\n        }\n        line.unshift({\n          ...token,\n          content: token.content.slice(this.scrollLeft - removed)\n        });\n        break;\n      }\n      return line;\n    });\n    this.ctx.save();\n    tokenLinesToDraw.forEach((line, index) => {\n      const lineNumber = lineNumbers.shift();\n      const formattedLineNumber =\n        \" \".repeat(lineNumberMaxWidth - lineNumber.toString().length) +\n        lineNumber.toString() +\n        \" | \";\n      let offsetX = 0;\n      this.ctx.font = `${this.fontSize}px ${this.fontFamily}`;\n      this.ctx.fillStyle = this.foreground;\n      this.ctx.fillText(\n        formattedLineNumber,\n        offsetX * this.charWidth,\n        this.lineHeight * index + this.lineHeight\n      );\n      offsetX = offsetX + formattedLineNumber.length;\n      for (const { content, color } of line) {\n        this.ctx.font = `${this.fontSize}px ${this.fontFamily}`;\n        this.ctx.fillStyle = color || this.foreground;\n        this.ctx.fillText(\n          content,\n          offsetX * this.charWidth,\n          this.lineHeight * index + this.lineHeight\n        );\n        offsetX = offsetX + content.length;\n      }\n    });\n    this.ctx.restore();\n  }\n  tokenize() {\n    return this.getLines().map(line => {\n      return line.split(\" \").map(token => {\n        return {\n          content: token + \" \"\n        };\n      });\n    });\n  }\n  getLines() {\n    return this.content.split(\"\\n\");\n  }\n  clear() {\n    this.canvas.width = this.canvas.width;\n  }\n  caret() {\n    this.clear();\n    this.render();\n    const leftPad = this.getLines().length.toString().length + 3;\n    const caretVisible =\n      this.scrollTop <= this.caretY && this.scrollLeft <= this.caretX + leftPad;\n    if (caretVisible && this.blinkIn) {\n      const offsetY = this.caretY - this.scrollTop;\n      const offsetX = this.caretX - this.scrollLeft + leftPad;\n      this.ctx.save();\n      this.ctx.beginPath();\n      this.ctx.strokeStyle = \"#ff66aa\";\n      this.ctx.moveTo(offsetX * this.charWidth, offsetY * this.lineHeight + 2);\n      this.ctx.lineTo(\n        offsetX * this.charWidth,\n        offsetY * this.lineHeight + this.lineHeight + 2 * this.lineSpacing + 2\n      );\n      this.ctx.stroke();\n      this.ctx.restore();\n    }\n    this.blinkIn = !this.blinkIn;\n  }\n  getCharWidth() {\n    const div = document.createElement(\"div\");\n    div.innerText = \"a\";\n    div.style.fontSize = this.fontSize + \"px\";\n    div.style.fontFamily = this.fontFamily;\n    div.style.display = \"inline-block\";\n    document.body.appendChild(div);\n    const { width } = window.getComputedStyle(div);\n    div.remove();\n    return Number(width.replace(/[a-z]+/gi, \"\"));\n  }\n}\n\nmodule.exports = Undyne;\n","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t? self // if in worker\n\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n * MIT license http://www.opensource.org/licenses/mit-license.php/\n * @author Lea Verou http://lea.verou.me\n */\n\nvar Prism = (function (_self){\n\n// Private helper vars\nvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\nvar uniqueId = 0;\n\n\nvar _ = {\n\tmanual: _self.Prism && _self.Prism.manual,\n\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\tutil: {\n\t\tencode: function (tokens) {\n\t\t\tif (tokens instanceof Token) {\n\t\t\t\treturn new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\treturn tokens.map(_.util.encode);\n\t\t\t} else {\n\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t}\n\t\t},\n\n\t\ttype: function (o) {\n\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t},\n\n\t\tobjId: function (obj) {\n\t\t\tif (!obj['__id']) {\n\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t}\n\t\t\treturn obj['__id'];\n\t\t},\n\n\t\t// Deep clone a language definition (e.g. to extend it)\n\t\tclone: function deepClone(o, visited) {\n\t\t\tvar clone, id, type = _.util.type(o);\n\t\t\tvisited = visited || {};\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Object':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = {};\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn clone;\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = [];\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\to.forEach(function (v, i) {\n\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn clone;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn o;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t *\n\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t *\n\t\t * @param {Element} element\n\t\t * @returns {string}\n\t\t */\n\t\tgetLanguage: function (element) {\n\t\t\twhile (element && !lang.test(element.className)) {\n\t\t\t\telement = element.parentElement;\n\t\t\t}\n\t\t\tif (element) {\n\t\t\t\treturn (element.className.match(lang) || [, 'none'])[1].toLowerCase();\n\t\t\t}\n\t\t\treturn 'none';\n\t\t},\n\n\t\t/**\n\t\t * Returns the script element that is currently executing.\n\t\t *\n\t\t * This does __not__ work for line script element.\n\t\t *\n\t\t * @returns {HTMLScriptElement | null}\n\t\t */\n\t\tcurrentScript: function () {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif ('currentScript' in document) {\n\t\t\t\treturn document.currentScript;\n\t\t\t}\n\n\t\t\t// IE11 workaround\n\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t// this will not work for inline scripts\n\n\t\t\ttry {\n\t\t\t\tthrow new Error();\n\t\t\t} catch (err) {\n\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t// A stack will look like this:\n\t\t\t\t//\n\t\t\t\t// Error\n\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):.+:.+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\tif (src) {\n\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\n\tlanguages: {\n\t\textend: function (id, redef) {\n\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\tfor (var key in redef) {\n\t\t\t\tlang[key] = redef[key];\n\t\t\t}\n\n\t\t\treturn lang;\n\t\t},\n\n\t\t/**\n\t\t * Insert a token before another token in a language literal\n\t\t * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n\t\t * we cannot just provide an object, we need an object and a key.\n\t\t * @param inside The key (or language id) of the parent\n\t\t * @param before The key to insert before.\n\t\t * @param insert Object with the key/value pairs to insert\n\t\t * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n\t\t */\n\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\troot = root || _.languages;\n\t\t\tvar grammar = root[inside];\n\t\t\tvar ret = {};\n\n\t\t\tfor (var token in grammar) {\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar old = root[inside];\n\t\t\troot[inside] = ret;\n\n\t\t\t// Update references in other language definitions\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\n\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\tthis[key] = ret;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn ret;\n\t\t},\n\n\t\t// Traverse a language definition with Depth First Search\n\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\tvisited = visited || {};\n\n\t\t\tvar objId = _.util.objId;\n\n\t\t\tfor (var i in o) {\n\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\tvar property = o[i],\n\t\t\t\t\t    propertyType = _.util.type(property);\n\n\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t}\n\t\t\t\t\telse if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tplugins: {},\n\n\thighlightAll: function(async, callback) {\n\t\t_.highlightAllUnder(document, async, callback);\n\t},\n\n\thighlightAllUnder: function(container, async, callback) {\n\t\tvar env = {\n\t\t\tcallback: callback,\n\t\t\tcontainer: container,\n\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t};\n\n\t\t_.hooks.run('before-highlightall', env);\n\n\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\tfor (var i = 0, element; element = env.elements[i++];) {\n\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t}\n\t},\n\n\thighlightElement: function(element, async, callback) {\n\t\t// Find language\n\t\tvar language = _.util.getLanguage(element);\n\t\tvar grammar = _.languages[language];\n\n\t\t// Set language on the element, if not present\n\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n\t\t// Set language on the parent, for styling\n\t\tvar parent = element.parentNode;\n\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t}\n\n\t\tvar code = element.textContent;\n\n\t\tvar env = {\n\t\t\telement: element,\n\t\t\tlanguage: language,\n\t\t\tgrammar: grammar,\n\t\t\tcode: code\n\t\t};\n\n\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t_.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t}\n\n\t\t_.hooks.run('before-sanity-check', env);\n\n\t\tif (!env.code) {\n\t\t\t_.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t\treturn;\n\t\t}\n\n\t\t_.hooks.run('before-highlight', env);\n\n\t\tif (!env.grammar) {\n\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\treturn;\n\t\t}\n\n\t\tif (async && _self.Worker) {\n\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\tworker.onmessage = function(evt) {\n\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t};\n\n\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\tlanguage: env.language,\n\t\t\t\tcode: env.code,\n\t\t\t\timmediateClose: true\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t}\n\t},\n\n\thighlight: function (text, grammar, language) {\n\t\tvar env = {\n\t\t\tcode: text,\n\t\t\tgrammar: grammar,\n\t\t\tlanguage: language\n\t\t};\n\t\t_.hooks.run('before-tokenize', env);\n\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t_.hooks.run('after-tokenize', env);\n\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t},\n\n\tmatchGrammar: function (text, strarr, grammar, index, startPos, oneshot, target) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (target && target == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar pattern = patterns[j],\n\t\t\t\t\tinside = pattern.inside,\n\t\t\t\t\tlookbehind = !!pattern.lookbehind,\n\t\t\t\t\tgreedy = !!pattern.greedy,\n\t\t\t\t\tlookbehindLength = 0,\n\t\t\t\t\talias = pattern.alias;\n\n\t\t\t\tif (greedy && !pattern.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = pattern.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpattern.pattern = RegExp(pattern.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\tpattern = pattern.pattern || pattern;\n\n\t\t\t\t// Don’t cache length as it changes during the loop\n\t\t\t\tfor (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {\n\n\t\t\t\t\tvar str = strarr[i];\n\n\t\t\t\t\tif (strarr.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (greedy && i != strarr.length - 1) {\n\t\t\t\t\t\tpattern.lastIndex = pos;\n\t\t\t\t\t\tvar match = pattern.exec(text);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index + (lookbehind && match[1] ? match[1].length : 0),\n\t\t\t\t\t\t    to = match.index + match[0].length,\n\t\t\t\t\t\t    k = i,\n\t\t\t\t\t\t    p = pos;\n\n\t\t\t\t\t\tfor (var len = strarr.length; k < len && (p < to || (!strarr[k].type && !strarr[k - 1].greedy)); ++k) {\n\t\t\t\t\t\t\tp += strarr[k].length;\n\t\t\t\t\t\t\t// Move the index i to the element in strarr that is closest to from\n\t\t\t\t\t\t\tif (from >= p) {\n\t\t\t\t\t\t\t\t++i;\n\t\t\t\t\t\t\t\tpos = p;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (strarr[i] instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Number of tokens to delete and replace with the new match\n\t\t\t\t\t\tdelNum = k - i;\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpattern.lastIndex = 0;\n\n\t\t\t\t\t\tvar match = pattern.exec(str),\n\t\t\t\t\t\t\tdelNum = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tif (oneshot) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(lookbehind) {\n\t\t\t\t\t\tlookbehindLength = match[1] ? match[1].length : 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar from = match.index + lookbehindLength,\n\t\t\t\t\t    match = match[0].slice(lookbehindLength),\n\t\t\t\t\t    to = from + match.length,\n\t\t\t\t\t    before = str.slice(0, from),\n\t\t\t\t\t    after = str.slice(to);\n\n\t\t\t\t\tvar args = [i, delNum];\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\t++i;\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t\targs.push(before);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar wrapped = new Token(token, inside? _.tokenize(match, inside) : match, alias, match, greedy);\n\n\t\t\t\t\targs.push(wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\targs.push(after);\n\t\t\t\t\t}\n\n\t\t\t\t\tArray.prototype.splice.apply(strarr, args);\n\n\t\t\t\t\tif (delNum != 1)\n\t\t\t\t\t\t_.matchGrammar(text, strarr, grammar, i, pos, true, token + ',' + j);\n\n\t\t\t\t\tif (oneshot)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\ttokenize: function(text, grammar) {\n\t\tvar strarr = [text];\n\n\t\tvar rest = grammar.rest;\n\n\t\tif (rest) {\n\t\t\tfor (var token in rest) {\n\t\t\t\tgrammar[token] = rest[token];\n\t\t\t}\n\n\t\t\tdelete grammar.rest;\n\t\t}\n\n\t\t_.matchGrammar(text, strarr, grammar, 0, 0, false);\n\n\t\treturn strarr;\n\t},\n\n\thooks: {\n\t\tall: {},\n\n\t\tadd: function (name, callback) {\n\t\t\tvar hooks = _.hooks.all;\n\n\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\thooks[name].push(callback);\n\t\t},\n\n\t\trun: function (name, env) {\n\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\n\t\t\t\tcallback(env);\n\t\t\t}\n\t\t}\n\t},\n\n\tToken: Token\n};\n\n_self.Prism = _;\n\nfunction Token(type, content, alias, matchedStr, greedy) {\n\tthis.type = type;\n\tthis.content = content;\n\tthis.alias = alias;\n\t// Copy of the full string this token was created from\n\tthis.length = (matchedStr || '').length|0;\n\tthis.greedy = !!greedy;\n}\n\nToken.stringify = function(o, language) {\n\tif (typeof o == 'string') {\n\t\treturn o;\n\t}\n\n\tif (Array.isArray(o)) {\n\t\treturn o.map(function(element) {\n\t\t\treturn Token.stringify(element, language);\n\t\t}).join('');\n\t}\n\n\tvar env = {\n\t\ttype: o.type,\n\t\tcontent: Token.stringify(o.content, language),\n\t\ttag: 'span',\n\t\tclasses: ['token', o.type],\n\t\tattributes: {},\n\t\tlanguage: language\n\t};\n\n\tif (o.alias) {\n\t\tvar aliases = Array.isArray(o.alias) ? o.alias : [o.alias];\n\t\tArray.prototype.push.apply(env.classes, aliases);\n\t}\n\n\t_.hooks.run('wrap', env);\n\n\tvar attributes = Object.keys(env.attributes).map(function(name) {\n\t\treturn name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t}).join(' ');\n\n\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + (attributes ? ' ' + attributes : '') + '>' + env.content + '</' + env.tag + '>';\n};\n\nif (!_self.document) {\n\tif (!_self.addEventListener) {\n\t\t// in Node.js\n\t\treturn _;\n\t}\n\n\tif (!_.disableWorkerMessageHandler) {\n\t\t// In worker\n\t\t_self.addEventListener('message', function (evt) {\n\t\t\tvar message = JSON.parse(evt.data),\n\t\t\t\tlang = message.language,\n\t\t\t\tcode = message.code,\n\t\t\t\timmediateClose = message.immediateClose;\n\n\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\tif (immediateClose) {\n\t\t\t\t_self.close();\n\t\t\t}\n\t\t}, false);\n\t}\n\n\treturn _;\n}\n\n//Get current script and highlight\nvar script = _.util.currentScript();\n\nif (script) {\n\t_.filename = script.src;\n\n\tif (script.hasAttribute('data-manual')) {\n\t\t_.manual = true;\n\t}\n}\n\nif (!_.manual) {\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t// See https://github.com/PrismJS/prism/issues/2102\n\tvar readyState = document.readyState;\n\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t} else {\n\t\tif (window.requestAnimationFrame) {\n\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t}\n\t}\n}\n\nreturn _;\n\n})(_self);\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': /<!--[\\s\\S]*?-->/,\n\t'prolog': /<\\?[\\s\\S]+?\\?>/,\n\t'doctype': {\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:(?!<!--)[^\"'\\]]|\"[^\"]*\"|'[^']*'|<!--[\\s\\S]*?-->)*\\]\\s*)?>/i,\n\t\tgreedy: true\n\t},\n\t'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t/^=/,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': /&#?[\\da-z]{1,8};/i\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function(env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\s*|[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, tagName), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: /@[\\w-]+[\\s\\S]*?(?:;|(?=\\s*\\{))/,\n\t\t\tinside: {\n\t\t\t\t'rule': /@[\\w-]+/\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\tpattern: RegExp('url\\\\((?:' + string.source + '|[^\\n\\r()]*)\\\\)', 'i'),\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/\n\t\t\t}\n\t\t},\n\t\t'selector': RegExp('[^{}\\\\s](?:[^{};\"\\']|' + string.source + ')*?(?=\\\\s*\\\\{)'),\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n\t\t'important': /!important\\b/i,\n\t\t'function': /[-a-z0-9]+(?=\\()/i,\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\n\t\tPrism.languages.insertBefore('inside', 'attr-value', {\n\t\t\t'style-attr': {\n\t\t\t\tpattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'attr-name': {\n\t\t\t\t\t\tpattern: /^\\s*style/i,\n\t\t\t\t\t\tinside: markup.tag.inside\n\t\t\t\t\t},\n\t\t\t\t\t'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n\t\t\t\t\t'attr-value': {\n\t\t\t\t\t\tpattern: /.+/i,\n\t\t\t\t\t\tinside: Prism.languages.css\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\talias: 'language-css'\n\t\t\t}\n\t\t}, markup.tag);\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'function': /\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])[_$A-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\.(?:prototype|constructor))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&|\\|\\||[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?[.?]?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=(?:\\s|\\/\\*[\\s\\S]*?\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=>)/i,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*)\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\${|}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t}\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\tif (typeof self === 'undefined' || !self.Prism || !self.document || !document.querySelector) {\n\t\treturn;\n\t}\n\n\t/**\n\t * @param {Element} [container=document]\n\t */\n\tself.Prism.fileHighlight = function(container) {\n\t\tcontainer = container || document;\n\n\t\tvar Extensions = {\n\t\t\t'js': 'javascript',\n\t\t\t'py': 'python',\n\t\t\t'rb': 'ruby',\n\t\t\t'ps1': 'powershell',\n\t\t\t'psm1': 'powershell',\n\t\t\t'sh': 'bash',\n\t\t\t'bat': 'batch',\n\t\t\t'h': 'c',\n\t\t\t'tex': 'latex'\n\t\t};\n\n\t\tArray.prototype.slice.call(container.querySelectorAll('pre[data-src]')).forEach(function (pre) {\n\t\t\t// ignore if already loaded\n\t\t\tif (pre.hasAttribute('data-src-loaded')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// load current\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language, parent = pre;\n\t\t\tvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n\t\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\t\tparent = parent.parentNode;\n\t\t\t}\n\n\t\t\tif (parent) {\n\t\t\t\tlanguage = (pre.className.match(lang) || [, ''])[1];\n\t\t\t}\n\n\t\t\tif (!language) {\n\t\t\t\tvar extension = (src.match(/\\.(\\w+)$/) || [, ''])[1];\n\t\t\t\tlanguage = Extensions[extension] || extension;\n\t\t\t}\n\n\t\t\tvar code = document.createElement('code');\n\t\t\tcode.className = 'language-' + language;\n\n\t\t\tpre.textContent = '';\n\n\t\t\tcode.textContent = 'Loading…';\n\n\t\t\tpre.appendChild(code);\n\n\t\t\tvar xhr = new XMLHttpRequest();\n\n\t\t\txhr.open('GET', src, true);\n\n\t\t\txhr.onreadystatechange = function () {\n\t\t\t\tif (xhr.readyState == 4) {\n\n\t\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\t\tcode.textContent = xhr.responseText;\n\n\t\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t\t\t// mark as loaded\n\t\t\t\t\t\tpre.setAttribute('data-src-loaded', '');\n\t\t\t\t\t}\n\t\t\t\t\telse if (xhr.status >= 400) {\n\t\t\t\t\t\tcode.textContent = '✖ Error ' + xhr.status + ' while fetching file: ' + xhr.statusText;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcode.textContent = '✖ Error: File does not exist or is empty';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\txhr.send(null);\n\t\t});\n\t};\n\n\tdocument.addEventListener('DOMContentLoaded', function () {\n\t\t// execute inside handler, for dropping Event as argument\n\t\tself.Prism.fileHighlight();\n\t});\n\n})();\n","var components = {\"core\":{\"meta\":{\"path\":\"components/prism-core.js\",\"option\":\"mandatory\"},\"core\":\"Core\"},\"themes\":{\"meta\":{\"path\":\"themes/{id}.css\",\"link\":\"index.html?theme={id}\",\"exclusive\":true},\"prism\":{\"title\":\"Default\",\"option\":\"default\"},\"prism-dark\":\"Dark\",\"prism-funky\":\"Funky\",\"prism-okaidia\":{\"title\":\"Okaidia\",\"owner\":\"ocodia\"},\"prism-twilight\":{\"title\":\"Twilight\",\"owner\":\"remybach\"},\"prism-coy\":{\"title\":\"Coy\",\"owner\":\"tshedor\"},\"prism-solarizedlight\":{\"title\":\"Solarized Light\",\"owner\":\"hectormatos2011 \"},\"prism-tomorrow\":{\"title\":\"Tomorrow Night\",\"owner\":\"Rosey\"}},\"languages\":{\"meta\":{\"path\":\"components/prism-{id}\",\"noCSS\":true,\"examplesPath\":\"examples/prism-{id}\",\"addCheckAll\":true},\"markup\":{\"title\":\"Markup\",\"alias\":[\"html\",\"xml\",\"svg\",\"mathml\"],\"aliasTitles\":{\"html\":\"HTML\",\"xml\":\"XML\",\"svg\":\"SVG\",\"mathml\":\"MathML\"},\"option\":\"default\"},\"css\":{\"title\":\"CSS\",\"option\":\"default\",\"modify\":\"markup\"},\"clike\":{\"title\":\"C-like\",\"option\":\"default\",\"overrideExampleHeader\":true},\"javascript\":{\"title\":\"JavaScript\",\"require\":\"clike\",\"modify\":\"markup\",\"alias\":\"js\",\"option\":\"default\"},\"abap\":{\"title\":\"ABAP\",\"owner\":\"dellagustin\"},\"abnf\":{\"title\":\"Augmented Backus–Naur form\",\"owner\":\"RunDevelopment\"},\"actionscript\":{\"title\":\"ActionScript\",\"require\":\"javascript\",\"modify\":\"markup\",\"owner\":\"Golmote\"},\"ada\":{\"title\":\"Ada\",\"owner\":\"Lucretia\"},\"antlr4\":{\"title\":\"ANTLR4\",\"alias\":\"g4\",\"owner\":\"RunDevelopment\"},\"apacheconf\":{\"title\":\"Apache Configuration\",\"owner\":\"GuiTeK\"},\"apl\":{\"title\":\"APL\",\"owner\":\"ngn\"},\"applescript\":{\"title\":\"AppleScript\",\"owner\":\"Golmote\"},\"aql\":{\"title\":\"AQL\",\"owner\":\"RunDevelopment\"},\"arduino\":{\"title\":\"Arduino\",\"require\":\"cpp\",\"owner\":\"eisbehr-\"},\"arff\":{\"title\":\"ARFF\",\"owner\":\"Golmote\"},\"asciidoc\":{\"alias\":\"adoc\",\"title\":\"AsciiDoc\",\"owner\":\"Golmote\"},\"asm6502\":{\"title\":\"6502 Assembly\",\"owner\":\"kzurawel\"},\"aspnet\":{\"title\":\"ASP.NET (C#)\",\"require\":[\"markup\",\"csharp\"],\"owner\":\"nauzilus\"},\"autohotkey\":{\"title\":\"AutoHotkey\",\"owner\":\"aviaryan\"},\"autoit\":{\"title\":\"AutoIt\",\"owner\":\"Golmote\"},\"bash\":{\"title\":\"Bash\",\"alias\":\"shell\",\"aliasTitles\":{\"shell\":\"Shell\"},\"owner\":\"zeitgeist87\"},\"basic\":{\"title\":\"BASIC\",\"owner\":\"Golmote\"},\"batch\":{\"title\":\"Batch\",\"owner\":\"Golmote\"},\"bbcode\":{\"title\":\"BBcode\",\"owner\":\"RunDevelopment\"},\"bison\":{\"title\":\"Bison\",\"require\":\"c\",\"owner\":\"Golmote\"},\"bnf\":{\"title\":\"Backus–Naur form\",\"alias\":\"rbnf\",\"aliasTitles\":{\"rbnf\":\"Routing Backus–Naur form\"},\"owner\":\"RunDevelopment\"},\"brainfuck\":{\"title\":\"Brainfuck\",\"owner\":\"Golmote\"},\"brightscript\":{\"title\":\"BrightScript\",\"owner\":\"RunDevelopment\"},\"bro\":{\"title\":\"Bro\",\"owner\":\"wayward710\"},\"c\":{\"title\":\"C\",\"require\":\"clike\",\"owner\":\"zeitgeist87\"},\"csharp\":{\"title\":\"C#\",\"require\":\"clike\",\"alias\":[\"cs\",\"dotnet\"],\"owner\":\"mvalipour\"},\"cpp\":{\"title\":\"C++\",\"require\":\"c\",\"owner\":\"zeitgeist87\"},\"cil\":{\"title\":\"CIL\",\"owner\":\"sbrl\"},\"coffeescript\":{\"title\":\"CoffeeScript\",\"require\":\"javascript\",\"alias\":\"coffee\",\"owner\":\"R-osey\"},\"cmake\":{\"title\":\"CMake\",\"owner\":\"mjrogozinski\"},\"clojure\":{\"title\":\"Clojure\",\"owner\":\"troglotit\"},\"crystal\":{\"title\":\"Crystal\",\"require\":\"ruby\",\"owner\":\"MakeNowJust\"},\"csp\":{\"title\":\"Content-Security-Policy\",\"owner\":\"ScottHelme\"},\"css-extras\":{\"title\":\"CSS Extras\",\"require\":\"css\",\"modify\":\"css\",\"owner\":\"milesj\"},\"d\":{\"title\":\"D\",\"require\":\"clike\",\"owner\":\"Golmote\"},\"dart\":{\"title\":\"Dart\",\"require\":\"clike\",\"owner\":\"Golmote\"},\"diff\":{\"title\":\"Diff\",\"owner\":\"uranusjr\"},\"django\":{\"title\":\"Django/Jinja2\",\"require\":\"markup-templating\",\"alias\":\"jinja2\",\"owner\":\"romanvm\"},\"dns-zone-file\":{\"title\":\"DNS zone file\",\"owner\":\"RunDevelopment\",\"alias\":\"dns-zone\"},\"docker\":{\"title\":\"Docker\",\"alias\":\"dockerfile\",\"owner\":\"JustinBeckwith\"},\"ebnf\":{\"title\":\"Extended Backus–Naur form\",\"owner\":\"RunDevelopment\"},\"eiffel\":{\"title\":\"Eiffel\",\"owner\":\"Conaclos\"},\"ejs\":{\"title\":\"EJS\",\"require\":[\"javascript\",\"markup-templating\"],\"owner\":\"RunDevelopment\"},\"elixir\":{\"title\":\"Elixir\",\"owner\":\"Golmote\"},\"elm\":{\"title\":\"Elm\",\"owner\":\"zwilias\"},\"etlua\":{\"title\":\"Embedded Lua templating\",\"require\":[\"lua\",\"markup-templating\"],\"owner\":\"RunDevelopment\"},\"erb\":{\"title\":\"ERB\",\"require\":[\"ruby\",\"markup-templating\"],\"owner\":\"Golmote\"},\"erlang\":{\"title\":\"Erlang\",\"owner\":\"Golmote\"},\"fsharp\":{\"title\":\"F#\",\"require\":\"clike\",\"owner\":\"simonreynolds7\"},\"firestore-security-rules\":{\"title\":\"Firestore security rules\",\"require\":\"clike\",\"owner\":\"RunDevelopment\"},\"flow\":{\"title\":\"Flow\",\"require\":\"javascript\",\"owner\":\"Golmote\"},\"fortran\":{\"title\":\"Fortran\",\"owner\":\"Golmote\"},\"ftl\":{\"title\":\"FreeMarker Template Language\",\"require\":\"markup-templating\",\"owner\":\"RunDevelopment\"},\"gcode\":{\"title\":\"G-code\",\"owner\":\"RunDevelopment\"},\"gdscript\":{\"title\":\"GDScript\",\"owner\":\"RunDevelopment\"},\"gedcom\":{\"title\":\"GEDCOM\",\"owner\":\"Golmote\"},\"gherkin\":{\"title\":\"Gherkin\",\"owner\":\"hason\"},\"git\":{\"title\":\"Git\",\"owner\":\"lgiraudel\"},\"glsl\":{\"title\":\"GLSL\",\"require\":\"clike\",\"owner\":\"Golmote\"},\"gml\":{\"title\":\"GameMaker Language\",\"alias\":\"gamemakerlanguage\",\"require\":\"clike\",\"owner\":\"LiarOnce\"},\"go\":{\"title\":\"Go\",\"require\":\"clike\",\"owner\":\"arnehormann\"},\"graphql\":{\"title\":\"GraphQL\",\"owner\":\"Golmote\"},\"groovy\":{\"title\":\"Groovy\",\"require\":\"clike\",\"owner\":\"robfletcher\"},\"haml\":{\"title\":\"Haml\",\"require\":\"ruby\",\"optional\":[\"css\",\"css-extras\",\"coffeescript\",\"erb\",\"javascript\",\"less\",\"markdown\",\"scss\",\"textile\"],\"owner\":\"Golmote\"},\"handlebars\":{\"title\":\"Handlebars\",\"require\":\"markup-templating\",\"owner\":\"Golmote\"},\"haskell\":{\"title\":\"Haskell\",\"alias\":\"hs\",\"owner\":\"bholst\"},\"haxe\":{\"title\":\"Haxe\",\"require\":\"clike\",\"owner\":\"Golmote\"},\"hcl\":{\"title\":\"HCL\",\"owner\":\"outsideris\"},\"http\":{\"title\":\"HTTP\",\"optional\":[\"css\",\"javascript\",\"json\",\"markup\"],\"owner\":\"danielgtaylor\"},\"hpkp\":{\"title\":\"HTTP Public-Key-Pins\",\"owner\":\"ScottHelme\"},\"hsts\":{\"title\":\"HTTP Strict-Transport-Security\",\"owner\":\"ScottHelme\"},\"ichigojam\":{\"title\":\"IchigoJam\",\"owner\":\"BlueCocoa\"},\"icon\":{\"title\":\"Icon\",\"owner\":\"Golmote\"},\"inform7\":{\"title\":\"Inform 7\",\"owner\":\"Golmote\"},\"ini\":{\"title\":\"Ini\",\"owner\":\"aviaryan\"},\"io\":{\"title\":\"Io\",\"owner\":\"AlesTsurko\"},\"j\":{\"title\":\"J\",\"owner\":\"Golmote\"},\"java\":{\"title\":\"Java\",\"require\":\"clike\",\"owner\":\"sherblot\"},\"javadoc\":{\"title\":\"JavaDoc\",\"require\":[\"markup\",\"java\",\"javadoclike\"],\"modify\":[\"java\"],\"optional\":[\"scala\"],\"owner\":\"RunDevelopment\"},\"javadoclike\":{\"title\":\"JavaDoc-like\",\"modify\":[\"java\",\"javascript\",\"php\"],\"owner\":\"RunDevelopment\"},\"javastacktrace\":{\"title\":\"Java stack trace\",\"owner\":\"RunDevelopment\"},\"jolie\":{\"title\":\"Jolie\",\"require\":\"clike\",\"owner\":\"thesave\"},\"jq\":{\"title\":\"JQ\",\"owner\":\"RunDevelopment\"},\"jsdoc\":{\"title\":\"JSDoc\",\"require\":[\"javascript\",\"javadoclike\"],\"modify\":\"javascript\",\"optional\":[\"actionscript\",\"coffeescript\"],\"owner\":\"RunDevelopment\"},\"js-extras\":{\"title\":\"JS Extras\",\"require\":\"javascript\",\"modify\":\"javascript\",\"optional\":[\"actionscript\",\"coffeescript\",\"flow\",\"n4js\",\"typescript\"],\"owner\":\"RunDevelopment\"},\"js-templates\":{\"title\":\"JS Templates\",\"require\":\"javascript\",\"modify\":\"javascript\",\"optional\":[\"css\",\"css-extras\",\"graphql\",\"markdown\",\"markup\"],\"owner\":\"RunDevelopment\"},\"json\":{\"title\":\"JSON\",\"owner\":\"CupOfTea696\"},\"jsonp\":{\"title\":\"JSONP\",\"require\":\"json\",\"owner\":\"RunDevelopment\"},\"json5\":{\"title\":\"JSON5\",\"require\":\"json\",\"owner\":\"RunDevelopment\"},\"julia\":{\"title\":\"Julia\",\"owner\":\"cdagnino\"},\"keyman\":{\"title\":\"Keyman\",\"owner\":\"mcdurdin\"},\"kotlin\":{\"title\":\"Kotlin\",\"require\":\"clike\",\"owner\":\"Golmote\"},\"latex\":{\"title\":\"LaTeX\",\"alias\":[\"tex\",\"context\"],\"aliasTitles\":{\"tex\":\"TeX\",\"context\":\"ConTeXt\"},\"owner\":\"japborst\"},\"latte\":{\"title\":\"Latte\",\"require\":[\"clike\",\"markup-templating\",\"php\"],\"owner\":\"nette\"},\"less\":{\"title\":\"Less\",\"require\":\"css\",\"optional\":\"css-extras\",\"owner\":\"Golmote\"},\"lilypond\":{\"title\":\"LilyPond\",\"require\":\"scheme\",\"alias\":\"ly\",\"owner\":\"RunDevelopment\"},\"liquid\":{\"title\":\"Liquid\",\"owner\":\"cinhtau\"},\"lisp\":{\"title\":\"Lisp\",\"alias\":[\"emacs\",\"elisp\",\"emacs-lisp\"],\"owner\":\"JuanCaicedo\"},\"livescript\":{\"title\":\"LiveScript\",\"owner\":\"Golmote\"},\"lolcode\":{\"title\":\"LOLCODE\",\"owner\":\"Golmote\"},\"lua\":{\"title\":\"Lua\",\"owner\":\"Golmote\"},\"makefile\":{\"title\":\"Makefile\",\"owner\":\"Golmote\"},\"markdown\":{\"title\":\"Markdown\",\"require\":\"markup\",\"alias\":\"md\",\"owner\":\"Golmote\"},\"markup-templating\":{\"title\":\"Markup templating\",\"require\":\"markup\",\"owner\":\"Golmote\"},\"matlab\":{\"title\":\"MATLAB\",\"owner\":\"Golmote\"},\"mel\":{\"title\":\"MEL\",\"owner\":\"Golmote\"},\"mizar\":{\"title\":\"Mizar\",\"owner\":\"Golmote\"},\"monkey\":{\"title\":\"Monkey\",\"owner\":\"Golmote\"},\"moonscript\":{\"title\":\"MoonScript\",\"alias\":\"moon\",\"owner\":\"RunDevelopment\"},\"n1ql\":{\"title\":\"N1QL\",\"owner\":\"TMWilds\"},\"n4js\":{\"title\":\"N4JS\",\"require\":\"javascript\",\"optional\":[\"jsdoc\"],\"alias\":\"n4jsd\",\"owner\":\"bsmith-n4\"},\"nand2tetris-hdl\":{\"title\":\"Nand To Tetris HDL\",\"owner\":\"stephanmax\"},\"nasm\":{\"title\":\"NASM\",\"owner\":\"rbmj\"},\"neon\":{\"title\":\"NEON\",\"owner\":\"nette\"},\"nginx\":{\"title\":\"nginx\",\"owner\":\"westonganger\",\"require\":\"clike\"},\"nim\":{\"title\":\"Nim\",\"owner\":\"Golmote\"},\"nix\":{\"title\":\"Nix\",\"owner\":\"Golmote\"},\"nsis\":{\"title\":\"NSIS\",\"owner\":\"idleberg\"},\"objectivec\":{\"title\":\"Objective-C\",\"require\":\"c\",\"owner\":\"uranusjr\"},\"ocaml\":{\"title\":\"OCaml\",\"owner\":\"Golmote\"},\"opencl\":{\"title\":\"OpenCL\",\"require\":\"cpp\",\"modify\":[\"c\",\"cpp\"],\"overrideExampleHeader\":true,\"owner\":\"Milania1\"},\"oz\":{\"title\":\"Oz\",\"owner\":\"Golmote\"},\"parigp\":{\"title\":\"PARI/GP\",\"owner\":\"Golmote\"},\"parser\":{\"title\":\"Parser\",\"require\":\"markup\",\"owner\":\"Golmote\"},\"pascal\":{\"title\":\"Pascal\",\"alias\":\"objectpascal\",\"aliasTitles\":{\"objectpascal\":\"Object Pascal\"},\"owner\":\"Golmote\"},\"pascaligo\":{\"title\":\"Pascaligo\",\"owner\":\"DefinitelyNotAGoat\"},\"pcaxis\":{\"title\":\"PC-Axis\",\"alias\":\"px\",\"owner\":\"RunDevelopment\"},\"perl\":{\"title\":\"Perl\",\"owner\":\"Golmote\"},\"php\":{\"title\":\"PHP\",\"require\":[\"clike\",\"markup-templating\"],\"owner\":\"milesj\"},\"phpdoc\":{\"title\":\"PHPDoc\",\"require\":[\"php\",\"javadoclike\"],\"modify\":\"php\",\"owner\":\"RunDevelopment\"},\"php-extras\":{\"title\":\"PHP Extras\",\"require\":\"php\",\"modify\":\"php\",\"owner\":\"milesj\"},\"plsql\":{\"title\":\"PL/SQL\",\"require\":\"sql\",\"owner\":\"Golmote\"},\"powershell\":{\"title\":\"PowerShell\",\"owner\":\"nauzilus\"},\"processing\":{\"title\":\"Processing\",\"require\":\"clike\",\"owner\":\"Golmote\"},\"prolog\":{\"title\":\"Prolog\",\"owner\":\"Golmote\"},\"properties\":{\"title\":\".properties\",\"owner\":\"Golmote\"},\"protobuf\":{\"title\":\"Protocol Buffers\",\"require\":\"clike\",\"owner\":\"just-boris\"},\"pug\":{\"title\":\"Pug\",\"require\":[\"markup\",\"javascript\"],\"optional\":[\"coffeescript\",\"ejs\",\"handlebars\",\"less\",\"livescript\",\"markdown\",\"scss\",\"stylus\",\"twig\"],\"owner\":\"Golmote\"},\"puppet\":{\"title\":\"Puppet\",\"owner\":\"Golmote\"},\"pure\":{\"title\":\"Pure\",\"optional\":[\"c\",\"cpp\",\"fortran\"],\"owner\":\"Golmote\"},\"python\":{\"title\":\"Python\",\"alias\":\"py\",\"owner\":\"multipetros\"},\"q\":{\"title\":\"Q (kdb+ database)\",\"owner\":\"Golmote\"},\"qml\":{\"title\":\"QML\",\"require\":\"javascript\",\"owner\":\"RunDevelopment\"},\"qore\":{\"title\":\"Qore\",\"require\":\"clike\",\"owner\":\"temnroegg\"},\"r\":{\"title\":\"R\",\"owner\":\"Golmote\"},\"jsx\":{\"title\":\"React JSX\",\"require\":[\"markup\",\"javascript\"],\"optional\":[\"jsdoc\",\"js-extras\",\"js-templates\"],\"owner\":\"vkbansal\"},\"tsx\":{\"title\":\"React TSX\",\"require\":[\"jsx\",\"typescript\"]},\"renpy\":{\"title\":\"Ren'py\",\"owner\":\"HyuchiaDiego\"},\"reason\":{\"title\":\"Reason\",\"require\":\"clike\",\"owner\":\"Golmote\"},\"regex\":{\"title\":\"Regex\",\"modify\":[\"actionscript\",\"coffeescript\",\"flow\",\"javascript\",\"typescript\",\"vala\"],\"owner\":\"RunDevelopment\"},\"rest\":{\"title\":\"reST (reStructuredText)\",\"owner\":\"Golmote\"},\"rip\":{\"title\":\"Rip\",\"owner\":\"ravinggenius\"},\"roboconf\":{\"title\":\"Roboconf\",\"owner\":\"Golmote\"},\"robotframework\":{\"title\":\"Robot Framework\",\"alias\":\"robot\",\"owner\":\"RunDevelopment\"},\"ruby\":{\"title\":\"Ruby\",\"require\":\"clike\",\"alias\":\"rb\",\"owner\":\"samflores\"},\"rust\":{\"title\":\"Rust\",\"owner\":\"Golmote\"},\"sas\":{\"title\":\"SAS\",\"peerDependencies\":[\"groovy\",\"lua\",\"sql\"],\"owner\":\"Golmote\"},\"sass\":{\"title\":\"Sass (Sass)\",\"require\":\"css\",\"owner\":\"Golmote\"},\"scss\":{\"title\":\"Sass (Scss)\",\"require\":\"css\",\"optional\":\"css-extras\",\"owner\":\"MoOx\"},\"scala\":{\"title\":\"Scala\",\"require\":\"java\",\"owner\":\"jozic\"},\"scheme\":{\"title\":\"Scheme\",\"owner\":\"bacchus123\"},\"shell-session\":{\"title\":\"Shell session\",\"require\":\"bash\",\"owner\":\"RunDevelopment\"},\"smalltalk\":{\"title\":\"Smalltalk\",\"owner\":\"Golmote\"},\"smarty\":{\"title\":\"Smarty\",\"require\":\"markup-templating\",\"owner\":\"Golmote\"},\"solidity\":{\"title\":\"Solidity (Ethereum)\",\"require\":\"clike\",\"owner\":\"glachaud\"},\"soy\":{\"title\":\"Soy (Closure Template)\",\"require\":\"markup-templating\",\"owner\":\"Golmote\"},\"sparql\":{\"title\":\"SPARQL\",\"require\":\"turtle\",\"owner\":\"Triply-Dev\",\"alias\":\"rq\"},\"splunk-spl\":{\"title\":\"Splunk SPL\",\"owner\":\"RunDevelopment\"},\"sqf\":{\"title\":\"SQF: Status Quo Function (Arma 3)\",\"require\":\"clike\",\"owner\":\"RunDevelopment\"},\"sql\":{\"title\":\"SQL\",\"owner\":\"multipetros\"},\"stylus\":{\"title\":\"Stylus\",\"owner\":\"vkbansal\"},\"swift\":{\"title\":\"Swift\",\"require\":\"clike\",\"owner\":\"chrischares\"},\"tap\":{\"title\":\"TAP\",\"owner\":\"isaacs\",\"require\":\"yaml\"},\"tcl\":{\"title\":\"Tcl\",\"owner\":\"PeterChaplin\"},\"textile\":{\"title\":\"Textile\",\"require\":\"markup\",\"optional\":\"css\",\"owner\":\"Golmote\"},\"toml\":{\"title\":\"TOML\",\"owner\":\"RunDevelopment\"},\"tt2\":{\"title\":\"Template Toolkit 2\",\"require\":[\"clike\",\"markup-templating\"],\"owner\":\"gflohr\"},\"turtle\":{\"title\":\"Turtle\",\"alias\":[\"trig\"],\"aliasTitles\":{\"trig\":\"TriG\"},\"owner\":\"jakubklimek\"},\"twig\":{\"title\":\"Twig\",\"require\":\"markup\",\"owner\":\"brandonkelly\"},\"typescript\":{\"title\":\"TypeScript\",\"require\":\"javascript\",\"optional\":\"js-templates\",\"alias\":\"ts\",\"owner\":\"vkbansal\"},\"t4-cs\":{\"title\":\"T4 Text Templates (C#)\",\"require\":[\"t4-templating\",\"csharp\"],\"alias\":\"t4\",\"owner\":\"RunDevelopment\"},\"t4-vb\":{\"title\":\"T4 Text Templates (VB)\",\"require\":[\"t4-templating\",\"visual-basic\"],\"owner\":\"RunDevelopment\"},\"t4-templating\":{\"title\":\"T4 templating\",\"owner\":\"RunDevelopment\"},\"vala\":{\"title\":\"Vala\",\"require\":\"clike\",\"owner\":\"TemplarVolk\"},\"vbnet\":{\"title\":\"VB.Net\",\"require\":\"basic\",\"owner\":\"Bigsby\"},\"velocity\":{\"title\":\"Velocity\",\"require\":\"markup\",\"owner\":\"Golmote\"},\"verilog\":{\"title\":\"Verilog\",\"owner\":\"a-rey\"},\"vhdl\":{\"title\":\"VHDL\",\"owner\":\"a-rey\"},\"vim\":{\"title\":\"vim\",\"owner\":\"westonganger\"},\"visual-basic\":{\"title\":\"Visual Basic\",\"alias\":\"vb\",\"owner\":\"Golmote\"},\"wasm\":{\"title\":\"WebAssembly\",\"owner\":\"Golmote\"},\"wiki\":{\"title\":\"Wiki markup\",\"require\":\"markup\",\"owner\":\"Golmote\"},\"xeora\":{\"title\":\"Xeora\",\"require\":\"markup\",\"alias\":\"xeoracube\",\"aliasTitles\":{\"xeoracube\":\"XeoraCube\"},\"owner\":\"freakmaxi\"},\"xojo\":{\"title\":\"Xojo (REALbasic)\",\"owner\":\"Golmote\"},\"xquery\":{\"title\":\"XQuery\",\"require\":\"markup\",\"owner\":\"Golmote\"},\"yaml\":{\"title\":\"YAML\",\"alias\":\"yml\",\"owner\":\"hason\"},\"zig\":{\"title\":\"Zig\",\"owner\":\"RunDevelopment\"}},\"plugins\":{\"meta\":{\"path\":\"plugins/{id}/prism-{id}\",\"link\":\"plugins/{id}/\"},\"line-highlight\":{\"title\":\"Line Highlight\",\"description\":\"Highlights specific lines and/or line ranges.\"},\"line-numbers\":{\"title\":\"Line Numbers\",\"description\":\"Line number at the beginning of code lines.\",\"owner\":\"kuba-kubula\"},\"show-invisibles\":{\"title\":\"Show Invisibles\",\"description\":\"Show hidden characters such as tabs and line breaks.\",\"optional\":[\"autolinker\",\"data-uri-highlight\"]},\"autolinker\":{\"title\":\"Autolinker\",\"description\":\"Converts URLs and emails in code to clickable links. Parses Markdown links in comments.\"},\"wpd\":{\"title\":\"WebPlatform Docs\",\"description\":\"Makes tokens link to <a href=\\\"https://webplatform.github.io/docs/\\\">WebPlatform.org documentation</a>. The links open in a new tab.\"},\"custom-class\":{\"title\":\"Custom Class\",\"description\":\"This plugin allows you to prefix Prism's default classes (<code>.comment</code> can become <code>.namespace--comment</code>) or replace them with your defined ones (like <code>.editor__comment</code>). You can even add new classes.\",\"owner\":\"dvkndn\",\"noCSS\":true},\"file-highlight\":{\"title\":\"File Highlight\",\"description\":\"Fetch external files and highlight them with Prism. Used on the Prism website itself.\",\"noCSS\":true},\"show-language\":{\"title\":\"Show Language\",\"description\":\"Display the highlighted language in code blocks (inline code does not show the label).\",\"owner\":\"nauzilus\",\"noCSS\":true,\"require\":\"toolbar\"},\"jsonp-highlight\":{\"title\":\"JSONP Highlight\",\"description\":\"Fetch content with JSONP and highlight some interesting content (e.g. GitHub/Gists or Bitbucket API).\",\"noCSS\":true,\"owner\":\"nauzilus\"},\"highlight-keywords\":{\"title\":\"Highlight Keywords\",\"description\":\"Adds special CSS classes for each keyword matched in the code. For example, the keyword <code>if</code> will have the class <code>keyword-if</code> as well. You can have fine grained control over the appearance of each keyword by providing your own CSS rules.\",\"owner\":\"vkbansal\",\"noCSS\":true},\"remove-initial-line-feed\":{\"title\":\"Remove initial line feed\",\"description\":\"Removes the initial line feed in code blocks.\",\"owner\":\"Golmote\",\"noCSS\":true},\"inline-color\":{\"title\":\"Inline color\",\"description\":\"Adds a small inline preview for colors in style sheets.\",\"require\":\"css-extras\",\"owner\":\"RunDevelopment\"},\"previewers\":{\"title\":\"Previewers\",\"description\":\"Previewers for angles, colors, gradients, easing and time.\",\"require\":\"css-extras\",\"owner\":\"Golmote\"},\"autoloader\":{\"title\":\"Autoloader\",\"description\":\"Automatically loads the needed languages to highlight the code blocks.\",\"owner\":\"Golmote\",\"noCSS\":true},\"keep-markup\":{\"title\":\"Keep Markup\",\"description\":\"Prevents custom markup from being dropped out during highlighting.\",\"owner\":\"Golmote\",\"optional\":\"normalize-whitespace\",\"noCSS\":true},\"command-line\":{\"title\":\"Command Line\",\"description\":\"Display a command line with a prompt and, optionally, the output/response from the commands.\",\"owner\":\"chriswells0\"},\"unescaped-markup\":{\"title\":\"Unescaped Markup\",\"description\":\"Write markup without having to escape anything.\"},\"normalize-whitespace\":{\"title\":\"Normalize Whitespace\",\"description\":\"Supports multiple operations to normalize whitespace in code blocks.\",\"owner\":\"zeitgeist87\",\"optional\":\"unescaped-markup\",\"noCSS\":true},\"data-uri-highlight\":{\"title\":\"Data-URI Highlight\",\"description\":\"Highlights data-URI contents.\",\"owner\":\"Golmote\",\"noCSS\":true},\"toolbar\":{\"title\":\"Toolbar\",\"description\":\"Attach a toolbar for plugins to easily register buttons on the top of a code block.\",\"owner\":\"mAAdhaTTah\"},\"copy-to-clipboard\":{\"title\":\"Copy to Clipboard Button\",\"description\":\"Add a button that copies the code block to the clipboard when clicked.\",\"owner\":\"mAAdhaTTah\",\"require\":\"toolbar\",\"noCSS\":true},\"download-button\":{\"title\":\"Download Button\",\"description\":\"A button in the toolbar of a code block adding a convenient way to download a code file.\",\"owner\":\"Golmote\",\"require\":\"toolbar\",\"noCSS\":true},\"match-braces\":{\"title\":\"Match braces\",\"description\":\"Highlights matching braces.\",\"owner\":\"RunDevelopment\"},\"diff-highlight\":{\"title\":\"Diff Highlight\",\"description\":\"Highlights the code inside diff blocks.\",\"owner\":\"RunDevelopment\",\"require\":\"diff\"},\"filter-highlight-all\":{\"title\":\"Filter highlightAll\",\"description\":\"Filters the elements the <code>highlightAll</code> and <code>highlightAllUnder</code> methods actually highlight.\",\"owner\":\"RunDevelopment\",\"noCSS\":true}}};\nif (typeof module !== 'undefined' && module.exports) { module.exports = components; }","\"use strict\";\n\n/**\n * @typedef {Object<string, ComponentCategory>} Components\n * @typedef {Object<string, ComponentEntry | string>} ComponentCategory\n *\n * @typedef ComponentEntry\n * @property {string} [title] The title of the component.\n * @property {string} [owner] The GitHub user name of the owner.\n * @property {boolean} [noCSS=false] Whether the component doesn't have style sheets which should also be loaded.\n * @property {string | string[]} [alias] An optional list of aliases for the id of the component.\n * @property {Object<string, string>} [aliasTitles] An optional map from an alias to its title.\n *\n * Aliases which are not in this map will the get title of the component.\n * @property {string | string[]} [optional]\n * @property {string | string[]} [require]\n * @property {string | string[]} [modify]\n */\n\nvar getLoader = (function () {\n\n\t/**\n\t * A function which does absolutely nothing.\n\t *\n\t * @type {any}\n\t */\n\tvar noop = function () { };\n\n\t/**\n\t * Invokes the given callback for all elements of the given value.\n\t *\n\t * If the given value is an array, the callback will be invokes for all elements. If the given value is `null` or\n\t * `undefined`, the callback will not be invoked. In all other cases, the callback will be invoked with the given\n\t * value as parameter.\n\t *\n\t * @param {null | undefined | T | T[]} value\n\t * @param {(value: T, index: number) => void} callbackFn\n\t * @returns {void}\n\t * @template T\n\t */\n\tfunction forEach(value, callbackFn) {\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(callbackFn);\n\t\t} else if (value != null) {\n\t\t\tcallbackFn(value, 0);\n\t\t}\n\t}\n\n\t/**\n\t * Returns a new set for the given string array.\n\t *\n\t * @param {string[]} array\n\t * @returns {StringSet}\n\t *\n\t * @typedef {Object<string, true>} StringSet\n\t */\n\tfunction toSet(array) {\n\t\t/** @type {StringSet} */\n\t\tvar set = {};\n\t\tfor (var i = 0, l = array.length; i < l; i++) {\n\t\t\tset[array[i]] = true;\n\t\t}\n\t\treturn set;\n\t}\n\n\t/**\n\t * Creates a map of every components id to its entry.\n\t *\n\t * @param {Components} components\n\t * @returns {EntryMap}\n\t *\n\t * @typedef {{ readonly [id: string]: Readonly<ComponentEntry> | undefined }} EntryMap\n\t */\n\tfunction createEntryMap(components) {\n\t\t/** @type {Object<string, Readonly<ComponentEntry>>} */\n\t\tvar map = {};\n\n\t\tfor (var categoryName in components) {\n\t\t\tvar category = components[categoryName];\n\t\t\tfor (var id in category) {\n\t\t\t\tif (id != 'meta') {\n\t\t\t\t\t/** @type {ComponentEntry | string} */\n\t\t\t\t\tvar entry = category[id];\n\t\t\t\t\tmap[id] = typeof entry == 'string' ? { title: entry } : entry;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn map;\n\t}\n\n\t/**\n\t * Creates a full dependencies map which includes all types of dependencies and their transitive dependencies.\n\t *\n\t * @param {EntryMap} entryMap\n\t * @returns {DependencyResolver}\n\t *\n\t * @typedef {(id: string) => StringSet} DependencyResolver\n\t */\n\tfunction createDependencyResolver(entryMap) {\n\t\t/** @type {Object<string, StringSet>} */\n\t\tvar map = {};\n\t\tvar _stackArray = [];\n\n\t\t/**\n\t\t * Adds the dependencies of the given component to the dependency map.\n\t\t *\n\t\t * @param {string} id\n\t\t * @param {string[]} stack\n\t\t */\n\t\tfunction addToMap(id, stack) {\n\t\t\tif (id in map) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstack.push(id);\n\n\t\t\t// check for circular dependencies\n\t\t\tvar firstIndex = stack.indexOf(id);\n\t\t\tif (firstIndex < stack.length - 1) {\n\t\t\t\tthrow new Error('Circular dependency: ' + stack.slice(firstIndex).join(' -> '));\n\t\t\t}\n\n\t\t\t/** @type {StringSet} */\n\t\t\tvar dependencies = {};\n\n\t\t\tvar entry = entryMap[id];\n\t\t\tif (entry) {\n\t\t\t\t/**\n\t\t\t\t * This will add the direct dependency and all of its transitive dependencies to the set of\n\t\t\t\t * dependencies of `entry`.\n\t\t\t\t *\n\t\t\t\t * @param {string} depId\n\t\t\t\t * @returns {void}\n\t\t\t\t */\n\t\t\t\tfunction handleDirectDependency(depId) {\n\t\t\t\t\tif (!(depId in entryMap)) {\n\t\t\t\t\t\tthrow new Error(id + ' depends on an unknown component ' + depId);\n\t\t\t\t\t}\n\t\t\t\t\tif (depId in dependencies) {\n\t\t\t\t\t\t// if the given dependency is already in the set of deps, then so are its transitive deps\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\taddToMap(depId, stack);\n\t\t\t\t\tdependencies[depId] = true;\n\t\t\t\t\tfor (var transitiveDepId in map[depId]) {\n\t\t\t\t\t\tdependencies[transitiveDepId] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tforEach(entry.require, handleDirectDependency);\n\t\t\t\tforEach(entry.optional, handleDirectDependency);\n\t\t\t\tforEach(entry.modify, handleDirectDependency);\n\t\t\t}\n\n\t\t\tmap[id] = dependencies;\n\n\t\t\tstack.pop();\n\t\t}\n\n\t\treturn function (id) {\n\t\t\tvar deps = map[id];\n\t\t\tif (!deps) {\n\t\t\t\taddToMap(id, _stackArray);\n\t\t\t\tdeps = map[id];\n\t\t\t}\n\t\t\treturn deps;\n\t\t};\n\t}\n\n\t/**\n\t * Returns a function which resolves the aliases of its given id of alias.\n\t *\n\t * @param {EntryMap} entryMap\n\t * @returns {(idOrAlias: string) => string}\n\t */\n\tfunction createAliasResolver(entryMap) {\n\t\t/** @type {Object<string, string> | undefined} */\n\t\tvar map;\n\n\t\treturn function (idOrAlias) {\n\t\t\tif (idOrAlias in entryMap) {\n\t\t\t\treturn idOrAlias;\n\t\t\t} else {\n\t\t\t\t// only create the alias map if necessary\n\t\t\t\tif (!map) {\n\t\t\t\t\tmap = {};\n\n\t\t\t\t\tfor (var id in entryMap) {\n\t\t\t\t\t\tvar entry = entryMap[id];\n\t\t\t\t\t\tforEach(entry && entry.alias, function (alias) {\n\t\t\t\t\t\t\tif (alias in map) {\n\t\t\t\t\t\t\t\tthrow new Error(alias + ' cannot be alias for both ' + id + ' and ' + map[alias]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (alias in entryMap) {\n\t\t\t\t\t\t\t\tthrow new Error(alias + ' cannot be alias of ' + id + ' because it is a component.');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmap[alias] = id;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn map[idOrAlias] || idOrAlias;\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * @typedef LoadChainer\n\t * @property {(before: T, after: () => T) => T} series\n\t * @property {(values: T[]) => T} parallel\n\t * @template T\n\t */\n\n\t/**\n\t * Creates an implicit DAG from the given components and dependencies and call the given `loadComponent` for each\n\t * component in topological order.\n\t *\n\t * @param {DependencyResolver} dependencyResolver\n\t * @param {StringSet} ids\n\t * @param {(id: string) => T} loadComponent\n\t * @param {LoadChainer<T>} [chainer]\n\t * @returns {T}\n\t * @template T\n\t */\n\tfunction loadComponentsInOrder(dependencyResolver, ids, loadComponent, chainer) {\n\t\tconst series = chainer ? chainer.series : undefined;\n\t\tconst parallel = chainer ? chainer.parallel : noop;\n\n\t\t/** @type {Object<string, T>} */\n\t\tvar cache = {};\n\n\t\t/**\n\t\t * A set of ids of nodes which are not depended upon by any other node in the graph.\n\t\t * @type {StringSet}\n\t\t */\n\t\tvar ends = {};\n\n\t\t/**\n\t\t * Loads the given component and its dependencies or returns the cached value.\n\t\t *\n\t\t * @param {string} id\n\t\t * @returns {T}\n\t\t */\n\t\tfunction handleId(id) {\n\t\t\tif (id in cache) {\n\t\t\t\treturn cache[id];\n\t\t\t}\n\n\t\t\t// assume that it's an end\n\t\t\t// if it isn't, it will be removed later\n\t\t\tends[id] = true;\n\n\t\t\t// all dependencies of the component in the given ids\n\t\t\tvar dependsOn = [];\n\t\t\tfor (var depId in dependencyResolver(id)) {\n\t\t\t\tif (depId in ids) {\n\t\t\t\t\tdependsOn.push(depId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * The value to be returned.\n\t\t\t * @type {T}\n\t\t\t */\n\t\t\tvar value;\n\n\t\t\tif (dependsOn.length === 0) {\n\t\t\t\tvalue = loadComponent(id);\n\t\t\t} else {\n\t\t\t\tvar depsValue = parallel(dependsOn.map(function (depId) {\n\t\t\t\t\tvar value = handleId(depId);\n\t\t\t\t\t// none of the dependencies can be ends\n\t\t\t\t\tdelete ends[depId];\n\t\t\t\t\treturn value;\n\t\t\t\t}));\n\t\t\t\tif (series) {\n\t\t\t\t\t// the chainer will be responsibly for calling the function calling loadComponent\n\t\t\t\t\tvalue = series(depsValue, function () { return loadComponent(id); });\n\t\t\t\t} else {\n\t\t\t\t\t// we don't have a chainer, so we call loadComponent ourselves\n\t\t\t\t\tloadComponent(id);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// cache and return\n\t\t\treturn cache[id] = value;\n\t\t}\n\n\t\tfor (var id in ids) {\n\t\t\thandleId(id);\n\t\t}\n\n\t\t/** @type {T[]} */\n\t\tvar endValues = [];\n\t\tfor (var endId in ends) {\n\t\t\tendValues.push(cache[endId]);\n\t\t}\n\t\treturn parallel(endValues);\n\t}\n\n\t/**\n\t * Returns whether the given object has any keys.\n\t *\n\t * @param {object} obj\n\t */\n\tfunction hasKeys(obj) {\n\t\tfor (var key in obj) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns an object which provides methods to get the ids of the components which have to be loaded (`getIds`) and\n\t * a way to efficiently load them in synchronously and asynchronous contexts (`load`).\n\t *\n\t * The set of ids to be loaded is a superset of `load`. If some of these ids are in `loaded`, the corresponding\n\t * components will have to reloaded.\n\t *\n\t * The ids in `load` and `loaded` may be in any order and can contain duplicates.\n\t *\n\t * @param {Components} components\n\t * @param {string[]} load\n\t * @param {string[]} [loaded=[]] A list of already loaded components.\n\t *\n\t * If a component is in this list, then all of its requirements will also be assumed to be in the list.\n\t * @returns {Loader}\n\t *\n\t * @typedef Loader\n\t * @property {() => string[]} getIds A function to get all ids of the components to load.\n\t *\n\t * The returned ids will be duplicate-free, alias-free and in load order.\n\t * @property {LoadFunction} load A functional interface to load components.\n\t *\n\t * @typedef {<T> (loadComponent: (id: string) => T, chainer?: LoadChainer<T>) => T} LoadFunction\n\t * A functional interface to load components.\n\t *\n\t * The `loadComponent` function will be called for every component in the order in which they have to be loaded.\n\t *\n\t * The `chainer` is useful for asynchronous loading and its `series` and `parallel` functions can be thought of as\n\t * `Promise#then` and `Promise.all`.\n\t *\n\t * @example\n\t * load(id => { loadComponent(id); }); // returns undefined\n\t *\n\t * await load(\n\t *     id => loadComponentAsync(id), // returns a Promise for each id\n\t *     {\n\t *         series: async (before, after) => {\n\t *             await before;\n\t *             await after();\n\t *         },\n\t *         parallel: async (values) => {\n\t *             await Promise.all(values);\n\t *         }\n\t *     }\n\t * );\n\t */\n\tfunction getLoader(components, load, loaded) {\n\t\tvar entryMap = createEntryMap(components);\n\t\tvar resolveAlias = createAliasResolver(entryMap);\n\n\t\tload = load.map(resolveAlias);\n\t\tloaded = (loaded || []).map(resolveAlias);\n\n\t\tvar loadSet = toSet(load);\n\t\tvar loadedSet = toSet(loaded);\n\n\t\t// add requirements\n\n\t\tload.forEach(addRequirements);\n\t\tfunction addRequirements(id) {\n\t\t\tvar entry = entryMap[id];\n\t\t\tforEach(entry && entry.require, function (reqId) {\n\t\t\t\tif (!(reqId in loadedSet)) {\n\t\t\t\t\tloadSet[reqId] = true;\n\t\t\t\t\taddRequirements(reqId);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// add components to reload\n\n\t\t// A component x in `loaded` has to be reloaded if\n\t\t//  1) a component in `load` modifies x.\n\t\t//  2) x depends on a component in `load`.\n\t\t// The above two condition have to be applied until nothing changes anymore.\n\n\t\tvar dependencyResolver = createDependencyResolver(entryMap);\n\n\t\t/** @type {StringSet} */\n\t\tvar loadAdditions = loadSet;\n\t\t/** @type {StringSet} */\n\t\tvar newIds;\n\t\twhile (hasKeys(loadAdditions)) {\n\t\t\tnewIds = {};\n\n\t\t\t// condition 1)\n\t\t\tfor (var loadId in loadAdditions) {\n\t\t\t\tvar entry = entryMap[loadId];\n\t\t\t\tforEach(entry && entry.modify, function (modId) {\n\t\t\t\t\tif (modId in loadedSet) {\n\t\t\t\t\t\tnewIds[modId] = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// condition 2)\n\t\t\tfor (var loadedId in loadedSet) {\n\t\t\t\tif (!(loadedId in loadSet)) {\n\t\t\t\t\tfor (var depId in dependencyResolver(loadedId)) {\n\t\t\t\t\t\tif (depId in loadSet) {\n\t\t\t\t\t\t\tnewIds[loadedId] = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tloadAdditions = newIds;\n\t\t\tfor (var newId in loadAdditions) {\n\t\t\t\tloadSet[newId] = true;\n\t\t\t}\n\t\t}\n\n\t\t/** @type {Loader} */\n\t\tvar loader = {\n\t\t\tgetIds: function () {\n\t\t\t\tvar ids = [];\n\t\t\t\tloader.load(function (id) {\n\t\t\t\t\tids.push(id);\n\t\t\t\t});\n\t\t\t\treturn ids;\n\t\t\t},\n\t\t\tload: function (loadComponent, chainer) {\n\t\t\t\treturn loadComponentsInOrder(dependencyResolver, loadSet, loadComponent, chainer);\n\t\t\t}\n\t\t};\n\n\t\treturn loader;\n\t}\n\n\treturn getLoader;\n\n}());\n\nif (typeof module !== 'undefined') {\n\tmodule.exports = getLoader;\n}\n","const components = require('../components.js');\nconst getLoader = require('../dependencies');\n\n\n/**\n * The set of all languages which have been loaded using the below function.\n *\n * @type {Set<string>}\n */\nconst loadedLanguages = new Set();\n\n/**\n * Loads the given languages and adds them to the current Prism instance.\n *\n * If no languages are provided, __all__ Prism languages will be loaded.\n *\n * @param {string|string[]} [languages]\n * @returns {void}\n */\nfunction loadLanguages(languages) {\n\tif (languages === undefined) {\n\t\tlanguages = Object.keys(components.languages).filter(l => l != 'meta');\n\t} else if (!Array.isArray(languages)) {\n\t\tlanguages = [languages];\n\t}\n\n\t// the user might have loaded languages via some other way or used `prism.js` which already includes some\n\t// we don't need to validate the ids because `getLoader` will ignore invalid ones\n\tconst loaded = [...loadedLanguages, ...Object.keys(Prism.languages)];\n\n\tgetLoader(components, languages, loaded).load(lang => {\n\t\tif (!(lang in components.languages)) {\n\t\t\tif (!loadLanguages.silent) {\n\t\t\t\tconsole.warn('Language does not exist: ' + lang);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tconst pathToLanguage = './prism-' + lang;\n\n\t\t// remove from require cache and from Prism\n\t\tdelete require.cache[require.resolve(pathToLanguage)];\n\t\tdelete Prism.languages[lang];\n\n\t\trequire(pathToLanguage);\n\n\t\tloadedLanguages.add(lang);\n\t});\n}\n\n/**\n * Set this to `true` to prevent all warning messages `loadLanguages` logs.\n */\nloadLanguages.silent = false;\n\nmodule.exports = loadLanguages;\n","import Undyne from \"./undyne\";\nimport \"./style.styl\";\nimport \"./dracula-prism.css\";\nimport fs from \"fs\";\nimport prism from \"prismjs\";\nimport loadLanguages from \"prismjs/components/index\";\n\nclass PrismUndyne extends Undyne {\n  constructor(canvas) {\n    super(canvas);\n    this.fontFamily = \"Fira Code\";\n  }\n  tokenize() {\n    this.colorMap = this.colorMap || {};\n    const flattenTokens = token =>\n      token.content && Array.isArray(token.content)\n        ? token.content.map(flattenTokens)\n        : token;\n    const convertToken = token => {\n      if (token.content) {\n        if (!this.colorMap[token.type]) {\n          const el = document.createElement(\"span\");\n          el.innerText = token.content;\n          el.classList.add(\"token\", token.type);\n          document.body.appendChild(el);\n          const { color } = window.getComputedStyle(el);\n          el.remove();\n          this.colorMap[token.type] = color;\n        }\n        return {\n          content: token.content,\n          color: this.colorMap[token.type]\n        };\n      }\n      return { content: token };\n    };\n    const tokens = prism\n      .tokenize(this.content, prism.languages.javascript)\n      .map(flattenTokens)\n      .flat(5)\n      .map(convertToken)\n      .map(token =>\n        token.content.includes(\"\\n\")\n          ? token.content\n              .split(/(?=\\n)|(?<=\\n)/)\n              .map(content => ({ ...token, content }))\n          : token\n      )\n      .flat();\n    const lines = [];\n    let line = [];\n    while (tokens.length) {\n      const token = tokens.shift();\n      if (token.content == \"\\n\") {\n        lines.push(line);\n        line = [];\n      } else {\n        line.push(token);\n      }\n    }\n    if (line.length) lines.push(line);\n    if (this.content.endsWith(\"\\n\")) lines.push([]);\n    return lines;\n  }\n}\n\nconst canvas = document.getElementById(\"undyne\");\nif (document.body.clientWidth < 992) {\n  const width = document.body.clientWidth - 64;\n  canvas.width = width;\n  canvas.setAttribute(\"width\", width + \"px\");\n  canvas.style.width = width + \"px\";\n}\nconst editor = new PrismUndyne(canvas);\neditor.content = fs.readFileSync(\"./undyne.js\", { encoding: \"utf8\" });\n"]}